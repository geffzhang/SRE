O2Setup.extractEmbededConfigZips();
//var topPanel = panel.add_Panel(true);
var topPanel = "Util - Java Decompiler (JAD based)".popupWindow(900,400);
var files = topPanel.insert_Left(300,"Drop *.jar files here (to decompile them)").add_TreeView();
var codeViewer = topPanel.title("Decompiled selected *. Class file").add_SourceCodeViewer();

var targetFolder = "_JadDecompilations".tempDir(false);
var jad = new API_Jad();

Action<string> extractClassesFromJar = 
	(jarFile)=>	{
					"Extracting Classes from Jar: {0}".info(jarFile);
					if (jarFile.extension(".jar"))
					{
						files.azure();
						var extractFolder = targetFolder.pathCombine(jarFile.fileName().safeFileName()).createDir();
						if (extractFolder.folderExists().isFalse() || extractFolder.files(true).empty())
							jarFile.unzip(extractFolder);
						var classFiles =extractFolder.files(true,"*.class");
						"found {0} *.class files in folder: {1}".info(classFiles.size(),extractFolder);
						var jarNode = files.add_Node(jarFile.fileName()).color(Color.DarkRed);
						files.collapse();						
						jarNode.add_Nodes(classFiles, (file)=> file.remove(extractFolder));						
						jarNode.selected().expand();
						jarNode.nodes().first().selected();
						files.white();						
					}
				};

files.afterSelect<string>(
	(file)=>{									
				var javaCode = jad.decompile(file);				
				codeViewer.set_Text(javaCode,".java");
			});
files.onDrop(extractClassesFromJar);


//O2File:API_Jad.cs
//O2EmbedTool:Jad
//O2Embed:java.ico