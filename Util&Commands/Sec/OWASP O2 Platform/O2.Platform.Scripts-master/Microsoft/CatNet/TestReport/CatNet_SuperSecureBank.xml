<?xml version="1.0" encoding="utf-8"?>
<Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Analysis>
    <AnalysisEngineVersion>1.0.3455.36250</AnalysisEngineVersion>
    <StartTimeStamp>Friday, June 01, 2012 6:04:34 PM</StartTimeStamp>
    <StopTimeStamp>Friday, June 01, 2012 6:04:38 PM</StopTimeStamp>
    <ElapsedTime>00:00:03.4630000</ElapsedTime>
    <User>WIN-FGNQ5AARJ8O\o2</User>
    <DataFlowSuperGraph>
      <Nodes>2903</Nodes>
      <Edges>3865</Edges>
    </DataFlowSuperGraph>
    <Targets>
      <Target>E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\bin\SuperSecureBankService.dll</Target>
      <Target>E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\bin\SuperSecureBank.dll</Target>
    </Targets>
  </Analysis>
  <Rules>
    <Rule>
      <Name>Process Command Execution</Name>
      <Identifier>ACESEC02</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>File Canonicalization</Name>
      <Identifier>ACESEC03</Identifier>
      <TotalResults>1</TotalResults>
      <Results>
        <Result>
          <Identifier>dd824cc7-3294-40b6-b64b-1d917b3dd78c</Identifier>
          <ResulstHash>EQJTsd7KXlw3k87EF/4sa+KVlNQ=</ResulstHash>
          <Color>282</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Item(stack2)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Sanitize the file path prior to passing it to file system routines.</Resolution>
          <ProblemDescription>A file canonicalization vulnerability was found through
		a user controlled variable that enters the application at
		ViewPage.aspx.cs:20 through the variable stack1 which
		eventually leads to a file canonicalization issue at
		ViewPage.aspx.cs:24.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>string RealPath = Request.PhysicalApplicationPath + Request["Page"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>string RealPath = Request.PhysicalApplicationPath + Request["Page"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>RealPath</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Item</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>content.Text = ProcessContent(File.ReadAllLines(RealPath));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>RealPath</InputVariable>
              <ActualInputVariable>RealPath</ActualInputVariable>
              <Method>System.IO.File.ReadAllLines</Method>
              <Argument>stack1</Argument>
            </CallResult>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>Exception Information</Name>
      <Identifier>ACESEC04</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>LDAP Injection</Name>
      <Identifier>ACESEC08</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>XPath Injection</Name>
      <Identifier>ACESEC07</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>SQL Injection</Name>
      <Identifier>ACESEC01</Identifier>
      <TotalResults>98</TotalResults>
      <Results>
        <Result>
          <Identifier>3dbff6b3-46bb-467a-ad52-e29bc673d431</Identifier>
          <ResulstHash>jbRb1T3PUPnwipOSIfBapB0QJQQ=</ResulstHash>
          <Color>323</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ExecuteSQL.aspx.cs:41 through the variable stack0 which
		eventually leads to a SQL injection issue at
		ExecuteSQL.aspx.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="41" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Submit_Click</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(SQLCommand.Text, conn);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="41" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Submit_Click</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(SQLCommand.Text, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a86d7905-67ab-4410-99b0-dc157899547a</Identifier>
          <ResulstHash>PWMpyGilmem9oAyThj3Z4Rw6DrY=</ResulstHash>
          <Color>301</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ViewAccount.aspx.cs:21 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:36.</ProblemDescription>
          <Transformations>
            <Origin line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Accounts.DataSource = AccountMgmt.GetAccounts(userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetAccounts</Method>
            </MethodBoundary>
            <CallResult line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetAccounts</StatementMethod>
              <Statement>selectAccounts = String.Format(selectAccounts, UserID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccounts</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetAccounts</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccounts, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccounts</InputVariable>
              <ActualInputVariable>selectAccounts</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>12759d04-0050-451a-a68b-b4110b0f09cd</Identifier>
          <ResulstHash>LWIpAC02G1Zt/uh1gPphrs/IOVo=</ResulstHash>
          <Color>290</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		DoTransfer.aspx.cs:18 through the variable stack1 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:83.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Convert.ToInt64</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.Transfer</Method>
            </MethodBoundary>
            <MethodBoundary line="104" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="82" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="83" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>86c99bec-9757-4b45-8ca1-36b76dea0ea5</Identifier>
          <ResulstHash>GF/jK2iyjG039SfPudBVp2pTZ/k=</ResulstHash>
          <Color>289</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		DoTransfer.aspx.cs:18 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:83.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Convert.ToInt64</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.Transfer</Method>
            </MethodBoundary>
            <MethodBoundary line="103" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.Transfer</StatementMethod>
              <Statement>Int64 FromAccountBalance = GetBalance(FromAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="82" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="83" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6b67debc-7648-4bc6-b832-56cdb0f27e48</Identifier>
          <ResulstHash>COI9l6c1oYK3aidz0C+b40ndaFo=</ResulstHash>
          <Color>318</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.ListControl}get_SelectedValue()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:54 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:83.</ProblemDescription>
          <Transformations>
            <Origin line="54" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 FromAcctNumber = Convert.ToInt64(FromAccount.SelectedValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="54" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 FromAcctNumber = Convert.ToInt64(FromAccount.SelectedValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>FromAcctNumber</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ListControl.get_SelectedValue</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="57" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>if (AccountMgmt.GetBalance(FromAcctNumber) - amount &gt;= 0)</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAcctNumber</InputVariable>
              <ActualInputVariable>FromAcctNumber</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="82" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="83" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>796f6f6d-da60-47a1-97aa-c2a14958188a</Identifier>
          <ResulstHash>ZP13hV3xWpOzjxeqdxJw8iQQqz0=</ResulstHash>
          <Color>290</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		DoTransfer.aspx.cs:18 through the variable stack1 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:125.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Convert.ToInt64</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.Transfer</Method>
            </MethodBoundary>
            <CallResult line="104" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>ToAccountBalance</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetBalance</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="106" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.Transfer</StatementMethod>
              <Statement>UpdateBalance(ToAccount, ToAccountBalance + Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>ToAccountBalance</InputVariable>
              <ActualInputVariable>ToAccountBalance</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="124" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="125" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6a9e7e34-223b-4d7a-ba2b-e846ee57d7b1</Identifier>
          <ResulstHash>ZAutrRt2eIKSRVetcMxvl/6zLII=</ResulstHash>
          <Color>289</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		DoTransfer.aspx.cs:18 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:125.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\DoTransfer.aspx.cs">
              <StatementMethod>SuperSecureBank.DoTransfer.Page_Load</StatementMethod>
              <Statement>AccountMgmt.Transfer(Convert.ToInt64(Request.Params["FromAccount"]),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Convert.ToInt64</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.Transfer</Method>
            </MethodBoundary>
            <MethodBoundary line="108" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.Transfer</StatementMethod>
              <Statement>UpdateBalance(FromAccount, FromAccountBalance - Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="124" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="125" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>82a8420e-0942-44f4-9005-233757cab174</Identifier>
          <ResulstHash>BuloFAe9tuzrp0JVgnynlgiJfYE=</ResulstHash>
          <Color>308</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:23 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:145.</ProblemDescription>
          <Transformations>
            <Origin line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>FromAccount.Items.AddRange(AccountMgmt.GetAccountList(userID));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.GetAccountList</Method>
            </MethodBoundary>
            <CallResult line="144" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetAccountList</StatementMethod>
              <Statement>selectAccounts = String.Format(selectAccounts, userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccounts</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="145" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.GetAccountList</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccounts, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccounts</InputVariable>
              <ActualInputVariable>selectAccounts</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>90e5d5df-0106-47ef-bd88-158500148877</Identifier>
          <ResulstHash>GEd6KaExH4sGmQ5QaIndmarpAHc=</ResulstHash>
          <Color>317</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForAccount.aspx.cs:36 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:172.</ProblemDescription>
          <Transformations>
            <Origin line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from UserMgmt.LookupSession</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="168" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="172" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>c9fec505-f3a2-4e9a-9cc8-eb308bb16e0c</Identifier>
          <ResulstHash>QGfro/GHu4Z4SuzYxnSPK37lL1s=</ResulstHash>
          <Color>314</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForCredit.aspx.cs:37 through the variable stack0 which
		eventually leads to a SQL injection issue at
		AccountMgmt.cs:172.</ProblemDescription>
          <Transformations>
            <Origin line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from UserMgmt.LookupSession</ActualInputVariable>
              <Method>SuperSecureBank.AccountMgmt.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="168" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="172" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\AccountMgmt.cs">
              <StatementMethod>SuperSecureBank.AccountMgmt.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>64cc1d04-b1d0-4172-b3a3-f46a9607e2b8</Identifier>
          <ResulstHash>v7+5zqni06XiNAMp8zg1nH6PSZc=</ResulstHash>
          <Color>338</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack3 := stack3.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack3</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Forum.aspx.cs:34 through the variable stack3 which
		eventually leads to a SQL injection issue at
		Forum.aspx.cs:35.</ProblemDescription>
          <Transformations>
            <Origin line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>insertComment = String.Format(insertComment, userID, TitleBox.Text, BodyBox.Text, DateTime.Now, valid);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
            </Origin>
            <CallResult line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>insertComment = String.Format(insertComment, userID, TitleBox.Text, BodyBox.Text, DateTime.Now, valid);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertComment</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertComment, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertComment</InputVariable>
              <ActualInputVariable>insertComment</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b1397233-f182-4cd8-9c60-a82fcd68522c</Identifier>
          <ResulstHash>KRk20cQ1dv9kcAoXFXmsAfsGT3o=</ResulstHash>
          <Color>311</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Forum.aspx.cs:30 through the variable stack0 which
		eventually leads to a SQL injection issue at
		Forum.aspx.cs:35.</ProblemDescription>
          <Transformations>
            <Origin line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>insertComment = String.Format(insertComment, userID, TitleBox.Text, BodyBox.Text, DateTime.Now, valid);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertComment</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertComment, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertComment</InputVariable>
              <ActualInputVariable>insertComment</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3b4e1531-8537-4850-b3aa-eb828822eff4</Identifier>
          <ResulstHash>v7+5zqni06XiNAMp8zg1nH6PSZc=</ResulstHash>
          <Color>337</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack3 := stack3.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack3</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Forum.aspx.cs:34 through the variable stack3 which
		eventually leads to a SQL injection issue at
		Forum.aspx.cs:35.</ProblemDescription>
          <Transformations>
            <Origin line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>insertComment = String.Format(insertComment, userID, TitleBox.Text, BodyBox.Text, DateTime.Now, valid);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
            </Origin>
            <CallResult line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>insertComment = String.Format(insertComment, userID, TitleBox.Text, BodyBox.Text, DateTime.Now, valid);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertComment</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertComment, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertComment</InputVariable>
              <ActualInputVariable>insertComment</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d54a26c6-95e5-4729-a3dd-93a268fbf93c</Identifier>
          <ResulstHash>aKqxpL30F7C1z7nK8VyTAjG0deM=</ResulstHash>
          <Color>333</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:29 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:21.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>email</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9387fe3d-7f84-4f9e-ba3f-7163bdae05fa</Identifier>
          <ResulstHash>N0NfSsfEZOU7v0UtgEQXu1mj7C0=</ResulstHash>
          <Color>332</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:29 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:21.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>609d7734-6f4d-4dbb-b5ea-e5be16eed036</Identifier>
          <ResulstHash>O6MW4A/7mHnbVNCuf+q17D1Q+RU=</ResulstHash>
          <Color>304</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Site.Master.cs:26 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>199ff6fe-26cd-4d7f-b218-f1d5d3c18c6b</Identifier>
          <ResulstHash>mO2uwaZAPSnysO9zEZ1qgKMa/AQ=</ResulstHash>
          <Color>314</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForCredit.aspx.cs:37 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a5810295-8fb1-4dcb-9e4c-fcd8bd08646d</Identifier>
          <ResulstHash>eBjg4lEIIOLFn8ScO+QJpZAHIpg=</ResulstHash>
          <Color>301</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ViewAccount.aspx.cs:21 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d802968d-6afc-4354-ad87-f36bf6c8cc7a</Identifier>
          <ResulstHash>9lU4vql7xBidHFBBEF2171R4V0U=</ResulstHash>
          <Color>317</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForAccount.aspx.cs:36 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="36" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Submit_Click</StatementMethod>
              <Statement>AccountMgmt.CreateAccount(UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value),</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1bf4e42e-0d1c-4532-ab57-e5a784737356</Identifier>
          <ResulstHash>1N9bVjvy7bHARDPkWq/tjSTnKuI=</ResulstHash>
          <Color>299</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:19 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3732114f-dcf4-4803-8c3d-234ceffd659a</Identifier>
          <ResulstHash>qB7VuzsGIXLvyFh0PeQhj28XehA=</ResulstHash>
          <Color>316</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForAccount.aspx.cs:20 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForAccount.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForAccount.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>27ee8cd7-0960-4100-91ad-fb4477ff802c</Identifier>
          <ResulstHash>7cUw4XxdWya68SHs0K7B0NoFjMY=</ResulstHash>
          <Color>297</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ExecuteSQL.aspx.cs:22 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>5f7266ae-e270-4027-973c-8e76add8e84f</Identifier>
          <ResulstHash>JxBruFbhKgeNTbO6XcF8swm1G6A=</ResulstHash>
          <Color>313</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForCredit.aspx.cs:20 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>25af0206-9b94-430d-aca6-472f0136d8d7</Identifier>
          <ResulstHash>yOr5G0XDhgvK+M4qRoKV6x18HG8=</ResulstHash>
          <Color>295</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Default.aspx.cs:20 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Default.aspx.cs">
              <StatementMethod>SuperSecureBank._Default.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Default.aspx.cs">
              <StatementMethod>SuperSecureBank._Default.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Default.aspx.cs">
              <StatementMethod>SuperSecureBank._Default.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Default.aspx.cs">
              <StatementMethod>SuperSecureBank._Default.Page_Load</StatementMethod>
              <Statement>if (0 != UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>23b72f01-1c91-443e-a4cd-0a34d07af370</Identifier>
          <ResulstHash>NZyILZsbmOFkfXdghPn/fqDvNsQ=</ResulstHash>
          <Color>311</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Forum.aspx.cs:30 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.PostComment_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>671dc404-479c-4653-a47d-7bb145902ace</Identifier>
          <ResulstHash>S6l65cO5Sovy81OKhKE2t5YrhvU=</ResulstHash>
          <Color>310</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Forum.aspx.cs:20 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.Page_Load</StatementMethod>
              <Statement>if (0 == UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.Page_Load</StatementMethod>
              <Statement>if (0 == UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.Page_Load</StatementMethod>
              <Statement>if (0 == UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Forum.aspx.cs">
              <StatementMethod>SuperSecureBank.Forum.Page_Load</StatementMethod>
              <Statement>if (0 == UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e76ca923-15ad-470a-8407-1374080ae1e5</Identifier>
          <ResulstHash>M2sun7nnNaM5Cq5f0aZ64jxiulQ=</ResulstHash>
          <Color>308</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:23 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:45.</ProblemDescription>
          <Transformations>
            <Origin line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
            </MethodBoundary>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="45" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ff70d709-dde7-4fe2-95e7-51e5ea3f9782</Identifier>
          <ResulstHash>x3PjJgjyTyb5x33f+X8huZ33hB0=</ResulstHash>
          <Color>304</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Site.Master.cs:26 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:72.</ProblemDescription>
          <Transformations>
            <Origin line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>UserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>LoginInfo.Text = "Welcome to the world of secure banking, " + UserMgmt.LookupUsername(UserID) + "!&lt;br /&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>UserID</InputVariable>
              <ActualInputVariable>UserID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupUsername</Method>
            </MethodBoundary>
            <CallResult line="71" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupUsername</StatementMethod>
              <Statement>getUserName = String.Format(getUserName, userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserName</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="72" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupUsername</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserName, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserName</InputVariable>
              <ActualInputVariable>getUserName</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>12a5755b-9102-46a3-86de-fed08d8e893b</Identifier>
          <ResulstHash>JsZppYKIjoCG0OzEYCm7sekorhk=</ResulstHash>
          <Color>297</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		ExecuteSQL.aspx.cs:22 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:72.</ProblemDescription>
          <Transformations>
            <Origin line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="22" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>Int64 userID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="23" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ExecuteSQL.aspx.cs">
              <StatementMethod>SuperSecureBank.ExecuteSQL.Page_Load</StatementMethod>
              <Statement>if (0 == userID || "admin" != UserMgmt.LookupUsername(userID).ToLower())</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupUsername</Method>
            </MethodBoundary>
            <CallResult line="71" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupUsername</StatementMethod>
              <Statement>getUserName = String.Format(getUserName, userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserName</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="72" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.LookupUsername</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserName, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserName</InputVariable>
              <ActualInputVariable>getUserName</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0f4d215a-bd3c-461f-a885-da1e2301c87b</Identifier>
          <ResulstHash>camF28u0i48XZAUo7tXK5EhbPCo=</ResulstHash>
          <Color>326</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:30 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:98.</ProblemDescription>
          <Transformations>
            <Origin line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CheckUser</Method>
            </MethodBoundary>
            <CallResult line="97" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CheckUser</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username, password);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="98" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CheckUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>add654ec-ef5d-46be-ae6b-b689690f900e</Identifier>
          <ResulstHash>AWXsqG8eeTXMb2Bii9b5l2AvOcM=</ResulstHash>
          <Color>325</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:28 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:125.</ProblemDescription>
          <Transformations>
            <Origin line="28" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>if (UserMgmt.UserExists(UserName.Text))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="28" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>if (UserMgmt.UserExists(UserName.Text))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.UserExists</Method>
            </MethodBoundary>
            <CallResult line="124" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.UserExists</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="125" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.UserExists</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>188a4688-14a8-439f-824e-a4ed9081af6a</Identifier>
          <ResulstHash>+BeBm/rrtb1Xbz/wv8g/HVGto0I=</ResulstHash>
          <Color>331</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:27 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:125.</ProblemDescription>
          <Transformations>
            <Origin line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>if (!UserMgmt.UserExists(UserName.Text))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>if (!UserMgmt.UserExists(UserName.Text))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.UserExists</Method>
            </MethodBoundary>
            <CallResult line="124" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.UserExists</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="125" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.UserExists</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>94a1c950-1809-40d9-bee9-183637ac30b1</Identifier>
          <ResulstHash>tRb2LcBkmnif+7fof6ALuHtUujk=</ResulstHash>
          <Color>327</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:30 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:151.</ProblemDescription>
          <Transformations>
            <Origin line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CheckUser</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="33" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Response.Cookies[Settings.Default.SessionCookieKey].Value = UserMgmt.CreateSession(userID).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateSession</Method>
            </MethodBoundary>
            <CallResult line="150" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="151" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>39b86dc3-45b5-458c-8854-875ec408bc0e</Identifier>
          <ResulstHash>gN5iiEC+tvkxrdBGgdbJQ1Z69rk=</ResulstHash>
          <Color>326</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:30 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:151.</ProblemDescription>
          <Transformations>
            <Origin line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="30" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CheckUser(UserName.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CheckUser</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="33" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Response.Cookies[Settings.Default.SessionCookieKey].Value = UserMgmt.CreateSession(userID).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateSession</Method>
            </MethodBoundary>
            <CallResult line="150" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="151" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>07dd71bc-c2fb-4a6c-8290-54a5aff0d294</Identifier>
          <ResulstHash>GLCnQP2IEQowoBIyM602FJvhhds=</ResulstHash>
          <Color>332</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:29 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:151.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateUser</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="32" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Response.Cookies[Settings.Default.SessionCookieKey].Value = UserMgmt.CreateSession(userID).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateSession</Method>
            </MethodBoundary>
            <CallResult line="150" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="151" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>5a6c022d-f4f1-4153-9743-e3987c38df4f</Identifier>
          <ResulstHash>NeK0KTFvgEUJ6IW9rWgAiatqpts=</ResulstHash>
          <Color>333</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:29 through the variable stack1 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:151.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateUser</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="32" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Response.Cookies[Settings.Default.SessionCookieKey].Value = UserMgmt.CreateSession(userID).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateSession</Method>
            </MethodBoundary>
            <CallResult line="150" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="151" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>200dfac7-1dce-4989-a338-b0bb880b48ce</Identifier>
          <ResulstHash>DESzcHzXkVA3jp6Oih2RRw85UDs=</ResulstHash>
          <Color>334</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:29 through the variable stack2 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:151.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="29" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Int64 userID = UserMgmt.CreateUser(UserName.Text, Email.Text, Password.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userID</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateUser</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="32" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Response.Cookies[Settings.Default.SessionCookieKey].Value = UserMgmt.CreateSession(userID).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.CreateSession</Method>
            </MethodBoundary>
            <CallResult line="150" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="151" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9980023f-f41d-4cd6-b552-03e971ff2df0</Identifier>
          <ResulstHash>ByZb2CSg46oD/cD8cfN2LSDHl+0=</ResulstHash>
          <Color>306</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		Logout.aspx.cs:19 through the variable stack0 which
		eventually leads to a SQL injection issue at
		UserMgmt.cs:170.</ProblemDescription>
          <Transformations>
            <Origin line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Logout.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Logout.Page_Load</StatementMethod>
              <Statement>UserMgmt.RemoveSession(Convert.ToInt64(Request.Cookies[Settings.Default.SessionCookieKey].Value));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Logout.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Logout.Page_Load</StatementMethod>
              <Statement>UserMgmt.RemoveSession(Convert.ToInt64(Request.Cookies[Settings.Default.SessionCookieKey].Value));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Logout.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Logout.Page_Load</StatementMethod>
              <Statement>UserMgmt.RemoveSession(Convert.ToInt64(Request.Cookies[Settings.Default.SessionCookieKey].Value));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Logout.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Logout.Page_Load</StatementMethod>
              <Statement>UserMgmt.RemoveSession(Convert.ToInt64(Request.Cookies[Settings.Default.SessionCookieKey].Value));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="19" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Logout.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Logout.Page_Load</StatementMethod>
              <Statement>UserMgmt.RemoveSession(Convert.ToInt64(Request.Cookies[Settings.Default.SessionCookieKey].Value));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Convert.ToInt64</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.RemoveSession</Method>
            </MethodBoundary>
            <CallResult line="169" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.RemoveSession</StatementMethod>
              <Statement>deleteSession = String.Format(deleteSession, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>deleteSession</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="170" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\UserMgmt.cs">
              <StatementMethod>SuperSecureBank.UserMgmt.RemoveSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(deleteSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>deleteSession</InputVariable>
              <ActualInputVariable>deleteSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>acab2157-2dfb-46ae-a17a-1ed4d73b4281</Identifier>
          <ResulstHash>D/Aufv2zZlhPjLyHvUsH5WPfY1c=</ResulstHash>
          <Color>261</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>pass</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable pass which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>email</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>email</InputVariable>
              <ActualInputVariable>email</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>043f3e94-e28d-4ed9-a528-c87464efc046</Identifier>
          <ResulstHash>9J8s/Vss3zoKRh+vkyPpAOL7LrY=</ResulstHash>
          <Color>261</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>pass</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable pass which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>af4284c7-1bc8-4c82-9f95-80e415b932fe</Identifier>
          <ResulstHash>DkwB+UU+jXj2FjOtXqWFGxWqzVA=</ResulstHash>
          <Color>261</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>pass</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable pass which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>pass</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>pass</InputVariable>
              <ActualInputVariable>pass</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>962ff04e-c351-4a96-9cd8-f2baa8b88f8b</Identifier>
          <ResulstHash>9J8s/Vss3zoKRh+vkyPpAOL7LrY=</ResulstHash>
          <Color>260</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>email</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable email which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>fb72f056-2a52-4146-9240-5797ecd1e5e8</Identifier>
          <ResulstHash>DkwB+UU+jXj2FjOtXqWFGxWqzVA=</ResulstHash>
          <Color>260</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>email</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable email which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>pass</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>pass</InputVariable>
              <ActualInputVariable>pass</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>61964b52-84c2-49ec-821c-7b391425780d</Identifier>
          <ResulstHash>D/Aufv2zZlhPjLyHvUsH5WPfY1c=</ResulstHash>
          <Color>260</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>email</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable email which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>email</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>email</InputVariable>
              <ActualInputVariable>email</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b47cac83-6a36-4650-9be5-37c46df7af58</Identifier>
          <ResulstHash>9J8s/Vss3zoKRh+vkyPpAOL7LrY=</ResulstHash>
          <Color>259</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>914e7310-6e83-4dad-b060-969b74dcbc14</Identifier>
          <ResulstHash>D/Aufv2zZlhPjLyHvUsH5WPfY1c=</ResulstHash>
          <Color>259</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>email</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>email</InputVariable>
              <ActualInputVariable>email</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>695c3540-12b7-44b6-a2a3-02c65643274d</Identifier>
          <ResulstHash>DkwB+UU+jXj2FjOtXqWFGxWqzVA=</ResulstHash>
          <Color>259</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateUser(System.String,System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String email,System.String pass]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:18 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:25.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>pass</OutputVariable>
            </Origin>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>insertUser = String.Format(insertUser, username, email, pass);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertUser</OutputVariable>
              <InputVariable>pass</InputVariable>
              <ActualInputVariable>pass</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <MethodBoundary line="25" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertUser, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertUser</InputVariable>
              <ActualInputVariable>insertUser</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1c893cbd-c23b-47ab-9bf5-331b705c28df</Identifier>
          <ResulstHash>wJU2Nlzr2p6oezWvXu42onJXgh0=</ResulstHash>
          <Color>279</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.LookupSession(System.String)); params = [SuperSecureBankService.SSBService this,System.String sessionValue]</EntryPoint>
          <EntryVariable>sessionValue</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:37 through the variable sessionValue which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:47.</ProblemDescription>
          <Transformations>
            <Origin line="37" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupSession</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sessionValue</OutputVariable>
            </Origin>
            <CallResult line="46" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupSession</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, sessionValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>sessionValue</InputVariable>
              <ActualInputVariable>sessionValue</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="47" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>69670d63-1038-427c-a541-07d746f3ff56</Identifier>
          <ResulstHash>P2FzqCmBBby+dKaqPv96ZZdnl34=</ResulstHash>
          <Color>274</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.LookupUsername(System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:60 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:68.</ProblemDescription>
          <Transformations>
            <Origin line="60" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupUsername</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="67" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupUsername</StatementMethod>
              <Statement>getUserName = String.Format(getUserName, userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserName</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="68" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.LookupUsername</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserName, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserName</InputVariable>
              <ActualInputVariable>getUserName</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1f90e8b4-dca2-4a49-b166-fb8b0960c536</Identifier>
          <ResulstHash>xpeSHiZWmcwgoOOmcveTkD1naMU=</ResulstHash>
          <Color>278</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CheckUser(System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String password]</EntryPoint>
          <EntryVariable>password</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:80 through the variable password which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:88.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="87" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username, password);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="88" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b5f73584-a438-4383-8117-6c35b246ac5b</Identifier>
          <ResulstHash>BA72bIK2reg2kSIlH11jMwYHy/8=</ResulstHash>
          <Color>278</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CheckUser(System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String password]</EntryPoint>
          <EntryVariable>password</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:80 through the variable password which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:88.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>password</OutputVariable>
            </Origin>
            <CallResult line="87" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username, password);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>password</InputVariable>
              <ActualInputVariable>password</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="88" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6f62b197-8394-41cb-9a0c-fa5fbf79654f</Identifier>
          <ResulstHash>BA72bIK2reg2kSIlH11jMwYHy/8=</ResulstHash>
          <Color>277</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CheckUser(System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String password]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:80 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:88.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>password</OutputVariable>
            </Origin>
            <CallResult line="87" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username, password);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>password</InputVariable>
              <ActualInputVariable>password</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="88" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e9bfbdb8-fde4-4fe4-97cd-1798628b7a34</Identifier>
          <ResulstHash>xpeSHiZWmcwgoOOmcveTkD1naMU=</ResulstHash>
          <Color>277</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CheckUser(System.String,System.String)); params = [SuperSecureBankService.SSBService this,System.String username,System.String password]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:80 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:88.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="87" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username, password);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="88" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CheckUser</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b5508f05-c9ed-4767-a659-aeccad710c9a</Identifier>
          <ResulstHash>RovSnsUrn9LAqUMo+3jH6K6/S3U=</ResulstHash>
          <Color>262</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.UserExists(System.String)); params = [SuperSecureBankService.SSBService this,System.String username]</EntryPoint>
          <EntryVariable>username</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:100 through the variable username which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:108.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UserExists</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>username</OutputVariable>
            </Origin>
            <CallResult line="107" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UserExists</StatementMethod>
              <Statement>getUserID = String.Format(getUserID, username);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>getUserID</OutputVariable>
              <InputVariable>username</InputVariable>
              <ActualInputVariable>username</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="108" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UserExists</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(getUserID, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>getUserID</InputVariable>
              <ActualInputVariable>getUserID</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b8166129-8ffe-413a-9201-113f78173b37</Identifier>
          <ResulstHash>FRtPCtUuuel6TTjCtSOLFui4DUk=</ResulstHash>
          <Color>273</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateSession(System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:120 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:126.</ProblemDescription>
          <Transformations>
            <Origin line="120" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateSession</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="125" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateSession</StatementMethod>
              <Statement>insertSession = String.Format(insertSession, userID, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertSession</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="126" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertSession</InputVariable>
              <ActualInputVariable>insertSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d7a61f12-bdd5-472e-b7eb-d8d166b2babc</Identifier>
          <ResulstHash>kXxlSIBJImUyUCGV/78vraDr2u0=</ResulstHash>
          <Color>280</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.RemoveSession(System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 sessionID]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:134 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:139.</ProblemDescription>
          <Transformations>
            <Origin line="134" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.RemoveSession</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sessionID</OutputVariable>
            </Origin>
            <CallResult line="138" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.RemoveSession</StatementMethod>
              <Statement>deleteSession = String.Format(deleteSession, sessionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>deleteSession</OutputVariable>
              <InputVariable>sessionID</InputVariable>
              <ActualInputVariable>sessionID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="139" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.RemoveSession</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(deleteSession, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>deleteSession</InputVariable>
              <ActualInputVariable>deleteSession</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>384095f9-498a-4066-b947-b7fa59673c8e</Identifier>
          <ResulstHash>8Dnz4lpYL6GTM0sHz0ThghUFikE=</ResulstHash>
          <Color>276</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.GetAccounts(System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 UserID]</EntryPoint>
          <EntryVariable>UserID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:171 through the variable UserID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:191.</ProblemDescription>
          <Transformations>
            <Origin line="171" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetAccounts</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>UserID</OutputVariable>
            </Origin>
            <CallResult line="190" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetAccounts</StatementMethod>
              <Statement>selectAccounts = String.Format(selectAccounts, UserID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccounts</OutputVariable>
              <InputVariable>UserID</InputVariable>
              <ActualInputVariable>UserID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="191" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetAccounts</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccounts, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccounts</InputVariable>
              <ActualInputVariable>selectAccounts</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>80d183d2-87de-4ebb-9c2b-64b8181892a8</Identifier>
          <ResulstHash>KAwngLk8u0baLPMH3km6CKWN6xI=</ResulstHash>
          <Color>265</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>Amount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable Amount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="270" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0071431a-c1bb-43a6-a555-022637b8ee08</Identifier>
          <ResulstHash>ifXUV1UFnzVJPoiVwTGp3xZ8zIQ=</ResulstHash>
          <Color>265</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>Amount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable Amount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>FromAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="269" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 FromAccountBalance = GetBalance(FromAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAccount</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a0c56cc4-7da1-43d0-bea7-0e400e99728d</Identifier>
          <ResulstHash>ifXUV1UFnzVJPoiVwTGp3xZ8zIQ=</ResulstHash>
          <Color>264</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>ToAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable ToAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>FromAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="269" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 FromAccountBalance = GetBalance(FromAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAccount</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e4e17682-6a82-49c3-a22b-9ca85de50f73</Identifier>
          <ResulstHash>KAwngLk8u0baLPMH3km6CKWN6xI=</ResulstHash>
          <Color>264</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>ToAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable ToAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="270" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2cafa6e4-620f-4d5a-afbb-ce1dcabdbfa3</Identifier>
          <ResulstHash>ifXUV1UFnzVJPoiVwTGp3xZ8zIQ=</ResulstHash>
          <Color>263</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>FromAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable FromAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>FromAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="269" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 FromAccountBalance = GetBalance(FromAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAccount</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>f4beb8ac-badc-4877-a02d-bb3f9cf3a502</Identifier>
          <ResulstHash>KAwngLk8u0baLPMH3km6CKWN6xI=</ResulstHash>
          <Color>263</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>FromAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable FromAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="270" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
            </MethodBoundary>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>7d240a4b-4289-4c5b-b70c-eac0e5689caa</Identifier>
          <ResulstHash>vPGoQOU48XQc4eXD9ScI0W+THfI=</ResulstHash>
          <Color>275</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.GetBalance(System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 accountID]</EntryPoint>
          <EntryVariable>accountID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:240 through the variable accountID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:249.</ProblemDescription>
          <Transformations>
            <Origin line="240" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountID</OutputVariable>
            </Origin>
            <CallResult line="248" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>selectAccount = String.Format(selectAccount, accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>selectAccount</OutputVariable>
              <InputVariable>accountID</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="249" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.GetBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(selectAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>selectAccount</InputVariable>
              <ActualInputVariable>selectAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>322411df-1e06-4ebe-9691-5cee7d4396ec</Identifier>
          <ResulstHash>s1+QBqY+aNGVjX0VkShcOb9QhAU=</ResulstHash>
          <Color>267</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.UpdateBalance(System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 Account,System.Int64 NewAmount]</EntryPoint>
          <EntryVariable>NewAmount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:283 through the variable NewAmount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="283" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>Account</OutputVariable>
            </Origin>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>Account</InputVariable>
              <ActualInputVariable>Account</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>fdda7662-8f68-452e-8a99-310aa18e5113</Identifier>
          <ResulstHash>IFl661EdND0rOq7J30YKlOdNjgI=</ResulstHash>
          <Color>267</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.UpdateBalance(System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 Account,System.Int64 NewAmount]</EntryPoint>
          <EntryVariable>NewAmount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:283 through the variable NewAmount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="283" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>NewAmount</OutputVariable>
            </Origin>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>NewAmount</InputVariable>
              <ActualInputVariable>NewAmount</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>4eeb169e-329b-4b44-b907-c34aa6c420ed</Identifier>
          <ResulstHash>IFl661EdND0rOq7J30YKlOdNjgI=</ResulstHash>
          <Color>266</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.UpdateBalance(System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 Account,System.Int64 NewAmount]</EntryPoint>
          <EntryVariable>Account</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:283 through the variable Account which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="283" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>NewAmount</OutputVariable>
            </Origin>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>NewAmount</InputVariable>
              <ActualInputVariable>NewAmount</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b5449dd6-712f-4b56-8990-0c100b91395f</Identifier>
          <ResulstHash>s1+QBqY+aNGVjX0VkShcOb9QhAU=</ResulstHash>
          <Color>266</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.UpdateBalance(System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 Account,System.Int64 NewAmount]</EntryPoint>
          <EntryVariable>Account</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:283 through the variable Account which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="283" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>Account</OutputVariable>
            </Origin>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>Account</InputVariable>
              <ActualInputVariable>Account</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d3b200db-e41b-4683-8fde-4fa9d954caf3</Identifier>
          <ResulstHash>eooKzDA47LVW6NnAjnI03dzXQNM=</ResulstHash>
          <Color>265</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>Amount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable Amount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>FromAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="274" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>UpdateBalance(FromAccount, FromAccountBalance - Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAccount</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>614eb6b0-aaad-415d-a1af-a6ca7965c11f</Identifier>
          <ResulstHash>HxEqA/iGqIYhv5ejNbOwPf65PoU=</ResulstHash>
          <Color>265</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>Amount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable Amount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="272" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>UpdateBalance(ToAccount, ToAccountBalance + Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b19d9eb7-70bf-40c8-90bd-791ecffbd8bd</Identifier>
          <ResulstHash>eooKzDA47LVW6NnAjnI03dzXQNM=</ResulstHash>
          <Color>264</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>ToAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable ToAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>FromAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="274" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>UpdateBalance(FromAccount, FromAccountBalance - Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FromAccount</InputVariable>
              <ActualInputVariable>FromAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3b32b7aa-3365-4aa9-84a9-7972681a9882</Identifier>
          <ResulstHash>HxEqA/iGqIYhv5ejNbOwPf65PoU=</ResulstHash>
          <Color>264</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>ToAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable ToAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <MethodBoundary line="272" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>UpdateBalance(ToAccount, ToAccountBalance + Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1cf6a057-ed79-461b-922b-4f269e4030e6</Identifier>
          <ResulstHash>rJFtmNo422+RX9AhK/AVJUrrK4c=</ResulstHash>
          <Color>263</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.Transfer(System.Int64,System.Int64,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 FromAccount,System.Int64 ToAccount,System.Int64 Amount]</EntryPoint>
          <EntryVariable>FromAccount</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:266 through the variable FromAccount which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:291.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>ToAccount</OutputVariable>
            </Origin>
            <CallResult line="270" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>Int64 ToAccountBalance = GetBalance(ToAccount);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>ToAccountBalance</OutputVariable>
              <InputVariable>ToAccount</InputVariable>
              <ActualInputVariable>ToAccount</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.GetBalance</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="272" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.Transfer</StatementMethod>
              <Statement>UpdateBalance(ToAccount, ToAccountBalance + Amount);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>ToAccountBalance</InputVariable>
              <ActualInputVariable>ToAccountBalance</ActualInputVariable>
              <Method>SuperSecureBankService.SSBService.UpdateBalance</Method>
            </MethodBoundary>
            <CallResult line="290" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>updateAmount = String.Format(updateAmount, NewAmount, Account);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>updateAmount</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="291" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.UpdateBalance</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(updateAmount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>updateAmount</InputVariable>
              <ActualInputVariable>updateAmount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e62c6e09-1e82-4c11-a87d-cfc55af8f545</Identifier>
          <ResulstHash>CkI757xaM6SGnXJlbedgHJ0xdmc=</ResulstHash>
          <Color>272</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>status</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable status which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountLevel</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountLevel</InputVariable>
              <ActualInputVariable>accountLevel</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>13589559-e263-4cee-990a-4ba61fa149be</Identifier>
          <ResulstHash>NG+u6Gw+x92hUtYVMJ6/rlh/xIQ=</ResulstHash>
          <Color>272</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>status</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable status which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>status</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>status</InputVariable>
              <ActualInputVariable>status</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b907b295-5239-4e0b-918f-8389677091c6</Identifier>
          <ResulstHash>mrQEJXsLwhbNpTqOzuWCnwkiDFY=</ResulstHash>
          <Color>272</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>status</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable status which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountType</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountType</InputVariable>
              <ActualInputVariable>accountType</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>eb134af0-62b3-4c05-86f8-c8d6d6c1dd7b</Identifier>
          <ResulstHash>q2MMSPDPEr87C9z8Eoh7rfkYfqM=</ResulstHash>
          <Color>272</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>status</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable status which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a1ff85e5-204f-45cd-8a0d-6c4a38e169bf</Identifier>
          <ResulstHash>AGl+9DAVG72byBlcFmUhlKGhS0E=</ResulstHash>
          <Color>272</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>status</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable status which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>balance</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>balance</InputVariable>
              <ActualInputVariable>balance</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9e7afbb4-d49a-4e04-8e33-2a9c06bc4085</Identifier>
          <ResulstHash>AGl+9DAVG72byBlcFmUhlKGhS0E=</ResulstHash>
          <Color>271</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountLevel</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountLevel which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>balance</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>balance</InputVariable>
              <ActualInputVariable>balance</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9a046874-e521-4c22-afcd-ab44e73c46df</Identifier>
          <ResulstHash>mrQEJXsLwhbNpTqOzuWCnwkiDFY=</ResulstHash>
          <Color>271</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountLevel</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountLevel which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountType</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountType</InputVariable>
              <ActualInputVariable>accountType</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>80ab564f-3a65-4c38-b383-502ea04b5e9e</Identifier>
          <ResulstHash>NG+u6Gw+x92hUtYVMJ6/rlh/xIQ=</ResulstHash>
          <Color>271</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountLevel</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountLevel which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>status</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>status</InputVariable>
              <ActualInputVariable>status</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>201d9546-83b5-452b-bbfc-286402bd1cb8</Identifier>
          <ResulstHash>CkI757xaM6SGnXJlbedgHJ0xdmc=</ResulstHash>
          <Color>271</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountLevel</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountLevel which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountLevel</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountLevel</InputVariable>
              <ActualInputVariable>accountLevel</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>06f5b7f9-31f6-436d-8573-5554d2d70993</Identifier>
          <ResulstHash>q2MMSPDPEr87C9z8Eoh7rfkYfqM=</ResulstHash>
          <Color>271</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountLevel</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountLevel which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b8adf4f0-491f-4a8d-bb8f-44e7fa940efd</Identifier>
          <ResulstHash>NG+u6Gw+x92hUtYVMJ6/rlh/xIQ=</ResulstHash>
          <Color>270</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>balance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable balance which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>status</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>status</InputVariable>
              <ActualInputVariable>status</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>aef38d6a-2d00-44a8-a077-d46d2d4bf083</Identifier>
          <ResulstHash>CkI757xaM6SGnXJlbedgHJ0xdmc=</ResulstHash>
          <Color>270</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>balance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable balance which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountLevel</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountLevel</InputVariable>
              <ActualInputVariable>accountLevel</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a38c0f40-640c-4765-ae50-4b1dc3a47e45</Identifier>
          <ResulstHash>q2MMSPDPEr87C9z8Eoh7rfkYfqM=</ResulstHash>
          <Color>270</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>balance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable balance which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0fb52cdb-038d-4f15-b036-e4373d248277</Identifier>
          <ResulstHash>AGl+9DAVG72byBlcFmUhlKGhS0E=</ResulstHash>
          <Color>270</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>balance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable balance which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>balance</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>balance</InputVariable>
              <ActualInputVariable>balance</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>7b19bddb-2af3-407f-b3ef-0ff8a1010844</Identifier>
          <ResulstHash>mrQEJXsLwhbNpTqOzuWCnwkiDFY=</ResulstHash>
          <Color>270</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>balance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable balance which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountType</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountType</InputVariable>
              <ActualInputVariable>accountType</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>063ef459-6262-4099-966a-9dcecf74d92c</Identifier>
          <ResulstHash>q2MMSPDPEr87C9z8Eoh7rfkYfqM=</ResulstHash>
          <Color>269</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountType which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e2681626-caee-4456-b5fd-67b9d6bc6d52</Identifier>
          <ResulstHash>mrQEJXsLwhbNpTqOzuWCnwkiDFY=</ResulstHash>
          <Color>269</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountType which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountType</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountType</InputVariable>
              <ActualInputVariable>accountType</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6f787a1b-a082-472c-a01c-aaa1da584a68</Identifier>
          <ResulstHash>NG+u6Gw+x92hUtYVMJ6/rlh/xIQ=</ResulstHash>
          <Color>269</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountType which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>status</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>status</InputVariable>
              <ActualInputVariable>status</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>f53ac12c-86ef-4366-bdc1-b20837f1f169</Identifier>
          <ResulstHash>CkI757xaM6SGnXJlbedgHJ0xdmc=</ResulstHash>
          <Color>269</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountType which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountLevel</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountLevel</InputVariable>
              <ActualInputVariable>accountLevel</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d5bb5f1f-3aa5-4ee0-ac80-9f82a2816bee</Identifier>
          <ResulstHash>AGl+9DAVG72byBlcFmUhlKGhS0E=</ResulstHash>
          <Color>269</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable accountType which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>balance</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>balance</InputVariable>
              <ActualInputVariable>balance</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>22a8e239-e1a3-4a38-aecb-f3af8515ae0b</Identifier>
          <ResulstHash>CkI757xaM6SGnXJlbedgHJ0xdmc=</ResulstHash>
          <Color>268</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountLevel</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountLevel</InputVariable>
              <ActualInputVariable>accountLevel</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>4a6f5d1a-2efb-4ce4-a131-13281877939e</Identifier>
          <ResulstHash>NG+u6Gw+x92hUtYVMJ6/rlh/xIQ=</ResulstHash>
          <Color>268</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>status</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>status</InputVariable>
              <ActualInputVariable>status</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>35ce7ae8-cb88-4803-8032-512dace5cfb1</Identifier>
          <ResulstHash>mrQEJXsLwhbNpTqOzuWCnwkiDFY=</ResulstHash>
          <Color>268</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountType</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>accountType</InputVariable>
              <ActualInputVariable>accountType</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>283cd9f0-49bc-482e-bd51-95132c54a6ab</Identifier>
          <ResulstHash>AGl+9DAVG72byBlcFmUhlKGhS0E=</ResulstHash>
          <Color>268</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>balance</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>balance</InputVariable>
              <ActualInputVariable>balance</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6eae6cf5-9cf6-49e6-86da-5a708ca5ea45</Identifier>
          <ResulstHash>q2MMSPDPEr87C9z8Eoh7rfkYfqM=</ResulstHash>
          <Color>268</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (SuperSecureBankService.SSBService.CreateAccount(System.Int64,System.String,System.String,System.String,System.Int64)); params = [SuperSecureBankService.SSBService this,System.Int64 userID,System.String accountType,System.String balance,System.String accountLevel,System.Int64 status]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		SSBService.svc.cs:302 through the variable userID which
		eventually leads to a SQL injection issue at
		SSBService.svc.cs:310.</ProblemDescription>
          <Transformations>
            <Origin line="302" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <CallResult line="306" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>insertNewAccount = string.Format(insertNewAccount, userID, accountType, balance, accountLevel, status);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>insertNewAccount</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="310" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBankService\SSBService.svc.cs">
              <StatementMethod>SuperSecureBankService.SSBService.CreateAccount</StatementMethod>
              <Statement>SqlCommand command = new SqlCommand(insertNewAccount, conn);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>insertNewAccount</InputVariable>
              <ActualInputVariable>insertNewAccount</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>Redirection to User Controlled Site</Name>
      <Identifier>ACESEC06</Identifier>
      <TotalResults>6</TotalResults>
      <Results>
        <Result>
          <Identifier>4a8732ab-6aa6-474e-9fea-27e452adcfe8</Identifier>
          <ResulstHash>I7hViLaRzkC2DUxgadJ5zZkqDDc=</ResulstHash>
          <Color>287</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:35 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		Login.aspx.cs:40.</ProblemDescription>
          <Transformations>
            <Origin line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>string continueUrl = Request.QueryString["ReturnUrl"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="35" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>string continueUrl = Request.QueryString["ReturnUrl"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>continueUrl</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="40" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>Response.Redirect(continueUrl);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>continueUrl</InputVariable>
              <ActualInputVariable>continueUrl</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>5d2d4ae2-0b40-4db0-85ba-d880e667a4a7</Identifier>
          <ResulstHash>7or7K865mwTHdvTbyMB1YhLC0e4=</ResulstHash>
          <Color>288</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		Register.aspx.cs:34 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		Register.aspx.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>string continueUrl = Request.QueryString["ReturnUrl"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="34" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>string continueUrl = Request.QueryString["ReturnUrl"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>continueUrl</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="41" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Register.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Register.CreateUserButton_Click</StatementMethod>
              <Statement>Response.Redirect(continueUrl);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>continueUrl</InputVariable>
              <ActualInputVariable>continueUrl</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>f97f0f9e-63e6-49ab-aeb6-65e6f317d77b</Identifier>
          <ResulstHash>hzYwmNmTEi29lhedRnJ9fHkoroc=</ResulstHash>
          <Color>335</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:52 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		Transfer.aspx.cs:58.</ProblemDescription>
          <Transformations>
            <Origin line="52" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>if (Int64.TryParse(AmountToTransfer.Text, out amount))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <MethodBoundary line="52" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>if (Int64.TryParse(AmountToTransfer.Text, out amount))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>System.Int64.TryParse</Method>
            </MethodBoundary>
            <CallResult line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack4</Argument>
            </CallResult>
            <MethodBoundary line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e8ca42b1-936c-449a-97e4-b117a8a0e300</Identifier>
          <ResulstHash>OPDgss5BBYH7JrURxNR0gTKieR8=</ResulstHash>
          <Color>318</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.ListControl}get_SelectedValue()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:54 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		Transfer.aspx.cs:58.</ProblemDescription>
          <Transformations>
            <Origin line="54" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 FromAcctNumber = Convert.ToInt64(FromAccount.SelectedValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="54" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 FromAcctNumber = Convert.ToInt64(FromAccount.SelectedValue);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>FromAcctNumber</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ListControl.get_SelectedValue</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>FromAcctNumber</InputVariable>
              <ActualInputVariable>FromAcctNumber</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <MethodBoundary line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a48fd851-84a3-4283-8861-24ee460b66d7</Identifier>
          <ResulstHash>TjA0TJwuYBu0asCgvdttzm1eWfs=</ResulstHash>
          <Color>336</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		Transfer.aspx.cs:55 through the variable stack0 which
		eventually leads to a cross-site redirection issue at
		Transfer.aspx.cs:58.</ProblemDescription>
          <Transformations>
            <Origin line="55" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 ToAcctNumber = Convert.ToInt64(ToAccount.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="55" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Int64 ToAcctNumber = Convert.ToInt64(ToAccount.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>ToAcctNumber</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>System.Convert.ToInt64</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>ToAcctNumber</InputVariable>
              <ActualInputVariable>ToAcctNumber</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="58" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Transfer.aspx.cs">
              <StatementMethod>SuperSecureBank.Transfer.DoTransfer_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format("DoTransfer.aspx?ToAccount={0}&amp;FromAccount={1}&amp;Amount={2}", ToAcctNumber, FromAcctNumber, amount));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>58804897-18d4-4c09-8036-365a1815d096</Identifier>
          <ResulstHash>tScsGYhgk6CY4+Cl5waFHNzhUG8=</ResulstHash>
          <Color>340</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not allow off-site redirections to absolute URLs that can
			be specified by the user.</Resolution>
          <ProblemDescription>A cross-site redirection vulnerability was found through
		a user controlled variable that enters the application at
		ApplyForCredit.aspx.cs:39 through the variable stack2 which
		eventually leads to a cross-site redirection issue at
		ApplyForCredit.aspx.cs:39.</ProblemDescription>
          <Transformations>
            <Origin line="39" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format(@"ActionDone.aspx?Title=Application Completed&amp;Text=Thank you, {0} for applying for a new &lt;strong&gt;{1}&lt;/strong&gt; account with SuperSecure Bank, your applicaiton will be reviewed and a banker will be with you shortly. At any time you can check on the status of your account by going to the &lt;a href=""ViewAccount.aspx""&gt;View Accounts Page&lt;/a&gt;", ApplicantName.Text, AccountType.SelectedItem));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="39" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format(@"ActionDone.aspx?Title=Application Completed&amp;Text=Thank you, {0} for applying for a new &lt;strong&gt;{1}&lt;/strong&gt; account with SuperSecure Bank, your applicaiton will be reviewed and a banker will be with you shortly. At any time you can check on the status of your account by going to the &lt;a href=""ViewAccount.aspx""&gt;View Accounts Page&lt;/a&gt;", ApplicantName.Text, AccountType.SelectedItem));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="39" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ApplyForCredit.aspx.cs">
              <StatementMethod>SuperSecureBank.ApplyForCredit.Submit_Click</StatementMethod>
              <Statement>Response.Redirect(string.Format(@"ActionDone.aspx?Title=Application Completed&amp;Text=Thank you, {0} for applying for a new &lt;strong&gt;{1}&lt;/strong&gt; account with SuperSecure Bank, your applicaiton will be reviewed and a banker will be with you shortly. At any time you can check on the status of your account by going to the &lt;a href=""ViewAccount.aspx""&gt;View Accounts Page&lt;/a&gt;", ApplicantName.Text, AccountType.SelectedItem));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.HttpResponse.Redirect</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>Cross-Site Scripting</Name>
      <Identifier>ACESEC05</Identifier>
      <TotalResults>7</TotalResults>
      <Results>
        <Result>
          <Identifier>dd705d68-2a90-4b26-a594-8336d961cf26</Identifier>
          <ResulstHash>kFpoa2RBJ2VriIvYsAveeNEnLI4=</ResulstHash>
          <Color>304</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Cookies()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Site.Master.cs:26 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		Site.Master.cs:27.</ProblemDescription>
          <Transformations>
            <Origin line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Cookies</ActualInputVariable>
              <Method>System.Web.HttpCookieCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookieCollection.get_Item</ActualInputVariable>
              <Method>System.Web.HttpCookie.get_Value</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="26" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>Int64 UserID = UserMgmt.LookupSession(Request.Cookies[Settings.Default.SessionCookieKey].Value);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>UserID</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpCookie.get_Value</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupSession</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>LoginInfo.Text = "Welcome to the world of secure banking, " + UserMgmt.LookupUsername(UserID) + "!&lt;br /&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>UserID</InputVariable>
              <ActualInputVariable>UserID</ActualInputVariable>
              <Method>SuperSecureBank.UserMgmt.LookupUsername</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>LoginInfo.Text = "Welcome to the world of secure banking, " + UserMgmt.LookupUsername(UserID) + "!&lt;br /&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from UserMgmt.LookupUsername</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="27" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Site.Master.cs">
              <StatementMethod>SuperSecureBank.SiteMaster.Page_Load</StatementMethod>
              <Statement>LoginInfo.Text = "Welcome to the world of secure banking, " + UserMgmt.LookupUsername(UserID) + "!&lt;br /&gt;" +</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>984acea2-3c09-41c1-ae5d-b478cfe8575a</Identifier>
          <ResulstHash>ROUjx/XvqQiHsscYhjTq6ykUCzk=</ResulstHash>
          <Color>286</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.HttpRequest}get_Item(stack3)</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		404.aspx.cs:21 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		404.aspx.cs:21.</ProblemDescription>
          <Transformations>
            <Origin line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\404.aspx.cs">
              <StatementMethod>SuperSecureBank._404.Page_Load</StatementMethod>
              <Statement>message.Text = string.Format("The file - {0} - doesn't exist", Request["AttemptedUrl"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\404.aspx.cs">
              <StatementMethod>SuperSecureBank._404.Page_Load</StatementMethod>
              <Statement>message.Text = string.Format("The file - {0} - doesn't exist", Request["AttemptedUrl"]);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Item</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="21" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\404.aspx.cs">
              <StatementMethod>SuperSecureBank._404.Page_Load</StatementMethod>
              <Statement>message.Text = string.Format("The file - {0} - doesn't exist", Request["AttemptedUrl"]);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>668b8128-6f66-425c-8b24-8068180bbf7b</Identifier>
          <ResulstHash>y8KqPWFJhsxtikl7e+OfKHae3PA=</ResulstHash>
          <Color>292</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ActionDone.aspx.cs:17 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		ActionDone.aspx.cs:17.</ProblemDescription>
          <Transformations>
            <Origin line="17" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>TitleText.Text = Request.Params["Title"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="17" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>TitleText.Text = Request.Params["Title"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="17" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>TitleText.Text = Request.Params["Title"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9287aa70-1096-4675-97a4-26c81505b650</Identifier>
          <ResulstHash>y8KqPWFJhsxtikl7e+OfKHae3PA=</ResulstHash>
          <Color>293</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Params()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ActionDone.aspx.cs:18 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		ActionDone.aspx.cs:18.</ProblemDescription>
          <Transformations>
            <Origin line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>BodyText.Text = Request.Params["Text"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>BodyText.Text = Request.Params["Text"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Params</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="18" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ActionDone.aspx.cs">
              <StatementMethod>SuperSecureBank.TransferSuccess.Page_Load</StatementMethod>
              <Statement>BodyText.Text = Request.Params["Text"];</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cf246abe-74f6-410c-848b-3a146d0c3877</Identifier>
          <ResulstHash>MPta+KUWeDb/Nk0oN5g8/0uET+I=</ResulstHash>
          <Color>328</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:44 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		Login.aspx.cs:44.</ProblemDescription>
          <Transformations>
            <Origin line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry {0}, that's not the password we have stored in the system. Please try again.", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry {0}, that's not the password we have stored in the system. Please try again.", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.Account.Login.CleanUsername</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry {0}, that's not the password we have stored in the system. Please try again.", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from Login.CleanUsername</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="44" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry {0}, that's not the password we have stored in the system. Please try again.", CleanUsername(UserName.Text));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Literal.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a34ad40a-8199-4736-8114-70889267bfce</Identifier>
          <ResulstHash>MPta+KUWeDb/Nk0oN5g8/0uET+I=</ResulstHash>
          <Color>329</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:49 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		Login.aspx.cs:49.</ProblemDescription>
          <Transformations>
            <Origin line="49" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry, the username {0} doesn't exist in the system", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="49" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry, the username {0} doesn't exist in the system", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>SuperSecureBank.Account.Login.CleanUsername</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="49" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry, the username {0} doesn't exist in the system", CleanUsername(UserName.Text));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from Login.CleanUsername</ActualInputVariable>
              <Method>System.String.Format</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="49" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\Account\Login.aspx.cs">
              <StatementMethod>SuperSecureBank.Account.Login.LoginButton_Click</StatementMethod>
              <Statement>FailureText.Text = string.Format("Sorry, the username {0} doesn't exist in the system", CleanUsername(UserName.Text));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Format</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Literal.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ae18a293-4cb8-46bd-a2e3-d942444973c4</Identifier>
          <ResulstHash>CTjPwtipRxH9rawD433kMIRDjW4=</ResulstHash>
          <Color>282</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.HttpRequest}get_Item(stack2)</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ViewPage.aspx.cs:20 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		ViewPage.aspx.cs:24.</ProblemDescription>
          <Transformations>
            <Origin line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>string RealPath = Request.PhysicalApplicationPath + Request["Page"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="20" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>string RealPath = Request.PhysicalApplicationPath + Request["Page"];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>RealPath</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Item</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>content.Text = ProcessContent(File.ReadAllLines(RealPath));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>RealPath</InputVariable>
              <ActualInputVariable>RealPath</ActualInputVariable>
              <Method>System.IO.File.ReadAllLines</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>content.Text = ProcessContent(File.ReadAllLines(RealPath));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from File.ReadAllLines</ActualInputVariable>
              <Method>SuperSecureBank.ViewPage.ProcessContent</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="24" file="E:\_Tests\Demos_Files\SuperSecureBank\SecurityInnovation-SuperSecureBank-938fde3\SuperSecureBank\ViewPage.aspx.cs">
              <StatementMethod>SuperSecureBank.ViewPage.Page_Load</StatementMethod>
              <Statement>content.Text = ProcessContent(File.ReadAllLines(RealPath));</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from ViewPage.ProcessContent</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Literal.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
  </Rules>
</Report>