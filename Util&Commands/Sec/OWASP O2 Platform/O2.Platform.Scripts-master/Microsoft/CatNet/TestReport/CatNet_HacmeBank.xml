<?xml version="1.0" encoding="utf-8"?>
<Report xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Analysis>
    <AnalysisEngineVersion>1.0.3455.36250</AnalysisEngineVersion>
    <StartTimeStamp>Tuesday, May 29, 2012 2:53:24 PM</StartTimeStamp>
    <StopTimeStamp>Tuesday, May 29, 2012 2:53:31 PM</StopTimeStamp>
    <ElapsedTime>00:00:07.8497645</ElapsedTime>
    <User>WIN-FGNQ5AARJ8O\o2</User>
    <DataFlowSuperGraph>
      <Nodes>19028</Nodes>
      <Edges>25492</Edges>
    </DataFlowSuperGraph>
    <Targets>
      <Target>E:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\Validator.Net\ValidatorNET_GAC_Assembly\bin\ValidatorNET_GAC_Assembly.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Web_jdeudbsk.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Web_0ilu0y13.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_WebReferences.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Code.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Web_pkzccj3m.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Web_zf0skbus.dll</Target>
      <Target>E:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\bin\FS_HttpModule.dll</Target>
      <Target>E:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\SqlInjection_DatabaseExplorer\bin\SqlInjection_DatabaseExplorer.exe</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\1B28459D\bin\App_Code.dll</Target>
      <Target>C:\Users\o2\AppData\Roaming\CATNet\PAC\4A74AB3F\bin\App_Web_ai2qojuc.dll</Target>
    </Targets>
  </Analysis>
  <Rules>
    <Rule>
      <Name>Process Command Execution</Name>
      <Identifier>ACESEC02</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>File Canonicalization</Name>
      <Identifier>ACESEC03</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>Exception Information</Name>
      <Identifier>ACESEC04</Identifier>
      <TotalResults>18</TotalResults>
      <Results>
        <Result>
          <Identifier>15b03529-5909-47be-b687-a7df7c07e46e</Identifier>
          <ResulstHash>AlSs61H9+eG+3e3BM/nk+AgZaV4=</ResulstHash>
          <Color>284</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack0 := objEx.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		RequestToValidate.cs:179 through the variable stack0 which
		eventually leads to the disclosure of exception information at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>Foundstone.RequestToValidate.htmlRed</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.htmlRed</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2048926e-48ba-4d9e-a860-55b2f8b2c36c</Identifier>
          <ResulstHash>xKN//a4UboqO3wBmDImDDuGHz44=</ResulstHash>
          <Color>284</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack0 := objEx.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		RequestToValidate.cs:179 through the variable stack0 which
		eventually leads to the disclosure of exception information at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>Foundstone.RequestToValidate.htmlRed</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.htmlRed</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="179" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <PropertyIndirection line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3a9023f9-4f44-4b0b-af65-f849fe796f53</Identifier>
          <ResulstHash>WgKynPDonUGHy/UNpnvfkMbrXS4=</ResulstHash>
          <Color>281</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack0 := objEx.{System.Exception}get_StackTrace()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		RequestToValidate.cs:180 through the variable stack0 which
		eventually leads to the disclosure of exception information at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Exception.get_StackTrace</ActualInputVariable>
              <Method>Foundstone.RequestToValidate.htmlRed</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.htmlRed</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d23215a9-a0dc-4554-8bf6-f68a16e45aee</Identifier>
          <ResulstHash>HkyVeAWWo1a6zCxXWiewmWV04Bk=</ResulstHash>
          <Color>281</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack0 := objEx.{System.Exception}get_StackTrace()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		RequestToValidate.cs:180 through the variable stack0 which
		eventually leads to the disclosure of exception information at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from Exception.get_StackTrace</ActualInputVariable>
              <Method>Foundstone.RequestToValidate.htmlRed</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.htmlRed</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="180" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <PropertyIndirection line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e0d9cf24-200f-4014-a8ca-d165f1723ef8</Identifier>
          <ResulstHash>ALIK9sIxkxVijRAlwgijlbR4OMU=</ResulstHash>
          <Color>285</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		ValidatorNet_Gac_Assembly.cs:63 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		ValidatorNet_Gac_Assembly.cs:63.</ProblemDescription>
          <Transformations>
            <Origin line="63" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\ValidatorNET_GAC_Assembly\ValidatorNet_Gac_Assembly.cs">
              <StatementMethod>Foundstone.ValidatorNET_GAC_Assembly.makeTheRequestFormDataEditable</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="63" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\ValidatorNET_GAC_Assembly\ValidatorNet_Gac_Assembly.cs">
              <StatementMethod>Foundstone.ValidatorNET_GAC_Assembly.makeTheRequestFormDataEditable</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>c89246fa-3372-4c51-bfa9-fe81f101ce10</Identifier>
          <ResulstHash>1Hfz+QiVRyjIJDQQ6AlpMur3rrs=</ResulstHash>
          <Color>286</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		ValidatorNet_Gac_Assembly.cs:97 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		ValidatorNet_Gac_Assembly.cs:97.</ProblemDescription>
          <Transformations>
            <Origin line="97" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\ValidatorNET_GAC_Assembly\ValidatorNet_Gac_Assembly.cs">
              <StatementMethod>Foundstone.ValidatorNET_GAC_Assembly.makeTheRequestQueryStringDataEditable</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="97" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\ValidatorNET_GAC_Assembly\ValidatorNet_Gac_Assembly.cs">
              <StatementMethod>Foundstone.ValidatorNET_GAC_Assembly.makeTheRequestQueryStringDataEditable</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6f463f21-2d32-4dc6-b51e-690007b5cd86</Identifier>
          <ResulstHash>qYk0gnB0JaUQGAaERvUPAfLLIOY=</ResulstHash>
          <Color>296</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack2 := ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Login.aspx.cs:147 through the variable stack2 which
		eventually leads to the disclosure of exception information at
		Login.aspx.cs:147.</ProblemDescription>
          <Transformations>
            <Origin line="147" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.LoadFoundstoneXsmlAdds</StatementMethod>
              <Statement>Response.Write("&lt;hr/&gt;" + ex.Message + "&lt;hr/&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="147" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.LoadFoundstoneXsmlAdds</StatementMethod>
              <Statement>Response.Write("&lt;hr/&gt;" + ex.Message + "&lt;hr/&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="147" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.LoadFoundstoneXsmlAdds</StatementMethod>
              <Statement>Response.Write("&lt;hr/&gt;" + ex.Message + "&lt;hr/&gt;");</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>4a3c937e-4559-443d-8490-67cc0db46ef1</Identifier>
          <ResulstHash>XbwykfEu8fwDWMdyS/OiFTK78Zg=</ResulstHash>
          <Color>288</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Sql_Query.ascx.cs:95 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Sql_Query.ascx.cs:95.</ProblemDescription>
          <Transformations>
            <Origin line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Sql_Query.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Sql_Query.populateDataGridWithSqlQueryResults</StatementMethod>
              <Statement>lblErrorMessage.Text = Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Sql_Query.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Sql_Query.populateDataGridWithSqlQueryResults</StatementMethod>
              <Statement>lblErrorMessage.Text = Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cc7bc191-48b7-4ccb-a5fa-75a55c91e2a7</Identifier>
          <ResulstHash>tZPY2XZg8F0GgkD5PvfHXx+wThY=</ResulstHash>
          <Color>287</Color>
          <Vector>Exception</Vector>
          <EntryPoint>CS$1$0000 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>CS$1$0000</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		AdminFunctions.cs:35 through the variable CS$1$0000 which
		eventually leads to the disclosure of exception information at
		Fetch_Web_Page.ascx.cs:43.</ProblemDescription>
          <Transformations>
            <Origin line="35" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\App_Code\classes\AdminFunctions.cs">
              <StatementMethod>HacmeBank_v2_Website.AdminFunctions.fetchWebPage</StatementMethod>
              <Statement>return Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$1$0000</OutputVariable>
            </Origin>
            <ReturnData line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\App_Code\classes\AdminFunctions.cs">
              <StatementMethod>HacmeBank_v2_Website.AdminFunctions.fetchWebPage</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>CS$1$0000</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <FromMethod>HacmeBank_v2_Website.AdminFunctions.fetchWebPage</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.admin.Fetch_Web_Page.btFetchWebPage_Click</ToMethod>
            </ReturnData>
            <MethodBoundary line="43" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Fetch_Web_Page.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Fetch_Web_Page.btFetchWebPage_Click</StatementMethod>
              <Statement>lbWebPageContents.Text = AdminFunctions.fetchWebPage(txtWebPageUrlToFetch.Text);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AdminFunctions.fetchWebPage</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a33ba68b-f1f3-4899-831c-f6db8ae588cc</Identifier>
          <ResulstHash>9kC69kJUQVU+WF+lFL6FR7OWzbw=</ResulstHash>
          <Color>289</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Manage_Users.ascx.cs:58 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Manage_Users.ascx.cs:58.</ProblemDescription>
          <Transformations>
            <Origin line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Users.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Manage_Users.LoadUsersDetails</StatementMethod>
              <Statement>lblErrorMessage.Text = Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Users.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Manage_Users.LoadUsersDetails</StatementMethod>
              <Statement>lblErrorMessage.Text = Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2c53eedf-b0b4-48a0-a813-087ed9dc7d70</Identifier>
          <ResulstHash>UL1C91F5XYZMcUEyFIfdC8apLvg=</ResulstHash>
          <Color>290</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Manage_Users.ascx.cs:96 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Manage_Users.ascx.cs:96.</ProblemDescription>
          <Transformations>
            <Origin line="96" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Users.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Manage_Users.processPageCommands</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="96" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Users.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Manage_Users.processPageCommands</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>633d4156-8d75-4dbb-a4d3-b087c54806e4</Identifier>
          <ResulstHash>4OUkjTNy8osasGTEJxxC9596AlI=</ResulstHash>
          <Color>291</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Manage_Messages.ascx.cs:86 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Manage_Messages.ascx.cs:86.</ProblemDescription>
          <Transformations>
            <Origin line="86" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Messages.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminManageMessages.DeleteMessage</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="86" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Messages.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminManageMessages.DeleteMessage</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0fd85fd4-18b4-4ec3-9d06-f211b32641d8</Identifier>
          <ResulstHash>iMvXCgU+8auPg6j2WbJF09zufiM=</ResulstHash>
          <Color>292</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		PasswordChange.ascx.cs:44 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		PasswordChange.ascx.cs:44.</ProblemDescription>
          <Transformations>
            <Origin line="44" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PasswordChange.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PasswordChange.btnSubmit_Click</StatementMethod>
              <Statement>lblMessage.Text=Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="44" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PasswordChange.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PasswordChange.btnSubmit_Click</StatementMethod>
              <Statement>lblMessage.Text=Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>8791d69d-6f1b-43d0-8ce9-0eca02ee0887</Identifier>
          <ResulstHash>zUeZs8dqMM9oFYX/IKtNI5sp+Pc=</ResulstHash>
          <Color>293</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Loan.ascx.cs:58 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Loan.ascx.cs:58.</ProblemDescription>
          <Transformations>
            <Origin line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\Loan.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Loan.btnSubmit_Click</StatementMethod>
              <Statement>lblMessg.Text = Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\Loan.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Loan.btnSubmit_Click</StatementMethod>
              <Statement>lblMessg.Text = Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cdcf6acd-66cf-4227-bd0a-a79d45216149</Identifier>
          <ResulstHash>i5ywpVERV/jnfo6cVCqUXekzSb0=</ResulstHash>
          <Color>294</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		MyAccountForm.ascx.cs:51 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		MyAccountForm.ascx.cs:51.</ProblemDescription>
          <Transformations>
            <Origin line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\MyAccountForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.MyAccountForm.Display_Account_Data</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\MyAccountForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.MyAccountForm.Display_Account_Data</StatementMethod>
              <Statement>lblErrorMessage.Text=Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>10fe0650-0dd6-4a6d-a083-95e0aeee86dd</Identifier>
          <ResulstHash>jDxsbcO9wKEn0feH9Ei7CKHvEcU=</ResulstHash>
          <Color>295</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack3 := ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack3</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		AccountTransfer.ascx.cs:64 through the variable stack3 which
		eventually leads to the disclosure of exception information at
		AccountTransfer.ascx.cs:64.</ProblemDescription>
          <Transformations>
            <Origin line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AccountTransfer.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AccountTransfer.btnTransfer_Click</StatementMethod>
              <Statement>lblErrorMessage.Text+="Error: " + ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
            </Origin>
            <CallResult line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AccountTransfer.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AccountTransfer.btnTransfer_Click</StatementMethod>
              <Statement>lblErrorMessage.Text+="Error: " + ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <MethodBoundary line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AccountTransfer.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AccountTransfer.btnTransfer_Click</StatementMethod>
              <Statement>lblErrorMessage.Text+="Error: " + ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>c1d7e353-9302-4c04-8d3e-16ce0ffabacd</Identifier>
          <ResulstHash>AElIGoxDCbeZ5jZ9QHVGltekN+8=</ResulstHash>
          <Color>297</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Login.aspx.cs:221 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Login.aspx.cs:221.</ProblemDescription>
          <Transformations>
            <Origin line="221" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>lblResult.Text= Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="221" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>lblResult.Text= Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>14c676b0-434f-4e13-806d-f89ba8652249</Identifier>
          <ResulstHash>TZTC88AtPzw+zoZUeqGDTgxSvkc=</ResulstHash>
          <Color>298</Color>
          <Vector>Exception</Vector>
          <EntryPoint>stack1 := Ex.{System.Exception}get_Message()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Do not provide the user with specific exception information</Resolution>
          <ProblemDescription>An information disclosure vulnerability was found through
		a exception information that enters the application at
		Login.aspx.cs:266 through the variable stack1 which
		eventually leads to the disclosure of exception information at
		Login.aspx.cs:266.</ProblemDescription>
          <Transformations>
            <Origin line="266" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.UpdateLoginAttmptCookie</StatementMethod>
              <Statement>lblResult.Text= Ex.Message;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="266" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.UpdateLoginAttmptCookie</StatementMethod>
              <Statement>lblResult.Text= Ex.Message;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Exception.get_Message</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>LDAP Injection</Name>
      <Identifier>ACESEC08</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>XPath Injection</Name>
      <Identifier>ACESEC07</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>SQL Injection</Name>
      <Identifier>ACESEC01</Identifier>
      <TotalResults>49</TotalResults>
      <Results>
        <Result>
          <Identifier>f1abf112-85cb-4e10-9452-01f8ae9f153b</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>88</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>accountNumber</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable accountNumber which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1f564f43-c510-4d02-86f5-053a93a8a625</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>87</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>17aaa87f-6132-464b-a991-9609817a9748</Identifier>
          <ResulstHash>VjSylm7ZpYzO31DVmUYYKVhRdQI=</ResulstHash>
          <Color>143</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.PostMessage(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String userID,System.String messageSubject,System.String messageText]</EntryPoint>
          <EntryVariable>messageText</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:51 through the variable messageText which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.PostMessage(userID,messageSubject,messageText);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.PostMessage</Method>
            </MethodBoundary>
            <CallResult line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>dde97028-33b0-4135-ad7c-42cb65b6ee66</Identifier>
          <ResulstHash>VjSylm7ZpYzO31DVmUYYKVhRdQI=</ResulstHash>
          <Color>142</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.PostMessage(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String userID,System.String messageSubject,System.String messageText]</EntryPoint>
          <EntryVariable>messageSubject</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:51 through the variable messageSubject which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.PostMessage(userID,messageSubject,messageText);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.PostMessage</Method>
            </MethodBoundary>
            <CallResult line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2b8374db-321c-4664-891c-192f2826bd70</Identifier>
          <ResulstHash>VjSylm7ZpYzO31DVmUYYKVhRdQI=</ResulstHash>
          <Color>141</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.PostMessage(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String userID,System.String messageSubject,System.String messageText]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:51 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.PostMessage(userID,messageSubject,messageText);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.PostMessage</Method>
            </MethodBoundary>
            <CallResult line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9a0367e8-bbf7-417c-bd9c-a56fe8f9b8ba</Identifier>
          <ResulstHash>VjSylm7ZpYzO31DVmUYYKVhRdQI=</ResulstHash>
          <Color>140</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.PostMessage(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String userID,System.String messageSubject,System.String messageText]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:51 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="51" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.PostMessage</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.PostMessage(userID,messageSubject,messageText);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.PostMessage</Method>
            </MethodBoundary>
            <CallResult line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="200" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.PostMessage</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_messages " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>08b38dac-2d72-4a73-b340-0fedc6048d70</Identifier>
          <ResulstHash>GRPtQiqhTBRtoKvoYlbxriCSQ8k=</ResulstHash>
          <Color>139</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails(System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>userPassword</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:104 through the variable userPassword which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="105" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.UpdateUser(userID,userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.UpdateUser</Method>
            </MethodBoundary>
            <CallResult line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3f26bd63-ac6b-4dc8-91e2-6b55b3199043</Identifier>
          <ResulstHash>GRPtQiqhTBRtoKvoYlbxriCSQ8k=</ResulstHash>
          <Color>138</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails(System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>loginID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:104 through the variable loginID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="105" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.UpdateUser(userID,userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.UpdateUser</Method>
            </MethodBoundary>
            <CallResult line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e835924d-219c-400a-9f30-2196c1a43c62</Identifier>
          <ResulstHash>GRPtQiqhTBRtoKvoYlbxriCSQ8k=</ResulstHash>
          <Color>137</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails(System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>userName</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:104 through the variable userName which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="105" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.UpdateUser(userID,userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.UpdateUser</Method>
            </MethodBoundary>
            <CallResult line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3d412b76-591b-4ec2-b7b4-ea8614d2ef09</Identifier>
          <ResulstHash>GRPtQiqhTBRtoKvoYlbxriCSQ8k=</ResulstHash>
          <Color>136</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails(System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:104 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="105" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.UpdateUser(userID,userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.UpdateUser</Method>
            </MethodBoundary>
            <CallResult line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>47329b64-8eaf-464f-9461-739d370ec4bd</Identifier>
          <ResulstHash>pHqGUKneZo9AcA0/KXOna9RFU4w=</ResulstHash>
          <Color>135</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails(System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:104 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>loginID</OutputVariable>
            </Origin>
            <MethodBoundary line="105" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.UpdateUserDetails</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.UpdateUser(userID,userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>loginID</InputVariable>
              <ActualInputVariable>loginID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.UpdateUser</Method>
            </MethodBoundary>
            <CallResult line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.UpdateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users set user_name = '" + userName + "',login_id = '" + loginID + "',password = '" + userPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>5c9899a7-6f05-485b-8e90-31d6d1f32d7f</Identifier>
          <ResulstHash>PAw7PqMdwfK2t52U9H4nGuu3xEI=</ResulstHash>
          <Color>115</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard(System.String,System.String,System.String,System.String,System.Int32,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sourceAccount_CCNumber,System.String sourceAccount_CCExpiryDate,System.String destinationAccount,System.Int32 amount,System.String comment]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:94 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sourceAccount_CCExpiryDate</OutputVariable>
            </Origin>
            <MethodBoundary line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard(sourceAccount_CCNumber,sourceAccount_CCExpiryDate,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>sourceAccount_CCExpiryDate</InputVariable>
              <ActualInputVariable>sourceAccount_CCExpiryDate</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</Method>
            </MethodBoundary>
            <CallResult line="141" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>comment = "[CC Payment from " + sourceAccount_CCNumber +":" +sourceAccount_CCExpiryDate +"] " + comment;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>comment</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="143" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return TransferFunds(hardCodedInternalBankAccountNumber,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
              <InputVariable>comment</InputVariable>
              <ActualInputVariable>comment</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.TransferFunds</Method>
            </MethodBoundary>
            <CallResult line="109" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>string createFundTransferItem =	"Insert into fsb_fund_transfers " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>createFundTransferItem</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="115" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>if (1 == SqlServerEngine.executeSQLCommand(createFundTransferItem))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>createFundTransferItem</InputVariable>
              <ActualInputVariable>createFundTransferItem</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>27b2275a-c8a3-49aa-a90d-ce8f25924ecf</Identifier>
          <ResulstHash>6DuIFbeSfWV0l0iMlgAsW9ChjdQ=</ResulstHash>
          <Color>115</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard(System.String,System.String,System.String,System.String,System.Int32,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sourceAccount_CCNumber,System.String sourceAccount_CCExpiryDate,System.String destinationAccount,System.Int32 amount,System.String comment]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:94 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sourceAccount_CCExpiryDate</OutputVariable>
            </Origin>
            <MethodBoundary line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard(sourceAccount_CCNumber,sourceAccount_CCExpiryDate,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>sourceAccount_CCExpiryDate</InputVariable>
              <ActualInputVariable>sourceAccount_CCExpiryDate</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</Method>
            </MethodBoundary>
            <CallResult line="141" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>comment = "[CC Payment from " + sourceAccount_CCNumber +":" +sourceAccount_CCExpiryDate +"] " + comment;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>comment</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="143" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return TransferFunds(hardCodedInternalBankAccountNumber,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
              <InputVariable>comment</InputVariable>
              <ActualInputVariable>comment</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.TransferFunds</Method>
            </MethodBoundary>
            <CallResult line="104" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>string destinationAccountTransaction =	"Insert into fsb_transactions " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>destinationAccountTransaction</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="114" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>if (1 == SqlServerEngine.executeSQLCommand(destinationAccountTransaction))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>destinationAccountTransaction</InputVariable>
              <ActualInputVariable>destinationAccountTransaction</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>8b72f83f-b0bc-44e2-a1b0-0254394038bb</Identifier>
          <ResulstHash>Vnxf7B4WCTvNcWoO68+mTjNVjCU=</ResulstHash>
          <Color>115</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard(System.String,System.String,System.String,System.String,System.Int32,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sourceAccount_CCNumber,System.String sourceAccount_CCExpiryDate,System.String destinationAccount,System.Int32 amount,System.String comment]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:94 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sourceAccount_CCExpiryDate</OutputVariable>
            </Origin>
            <MethodBoundary line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard(sourceAccount_CCNumber,sourceAccount_CCExpiryDate,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>sourceAccount_CCExpiryDate</InputVariable>
              <ActualInputVariable>sourceAccount_CCExpiryDate</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</Method>
            </MethodBoundary>
            <MethodBoundary line="139" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>if (1 == PaymentProviders.makeCCPayment(sourceAccount_CCNumber,sourceAccount_CCExpiryDate,hardCodedInternalBankAccountNumber,amount,"CC Payment"))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>sourceAccount_CCExpiryDate</ActualInputVariable>
              <Method>HacmeBank_v2_WS.PaymentProviders.makeCCPayment</Method>
            </MethodBoundary>
            <CallResult line="21" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\PaymentProviders.cs">
              <StatementMethod>HacmeBank_v2_WS.PaymentProviders.makeCCPayment</StatementMethod>
              <Statement>string externalCCPaymentTransaction =	"Insert into fsb_transactions " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>externalCCPaymentTransaction</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="26" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\PaymentProviders.cs">
              <StatementMethod>HacmeBank_v2_WS.PaymentProviders.makeCCPayment</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand(externalCCPaymentTransaction);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>externalCCPaymentTransaction</InputVariable>
              <ActualInputVariable>externalCCPaymentTransaction</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>7fb16a6a-e906-4a55-b1d7-3375cf32db7d</Identifier>
          <ResulstHash>nq1vXavoxI7J60P93I8WeldJuXg=</ResulstHash>
          <Color>115</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard(System.String,System.String,System.String,System.String,System.Int32,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sourceAccount_CCNumber,System.String sourceAccount_CCExpiryDate,System.String destinationAccount,System.Int32 amount,System.String comment]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:94 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sourceAccount_CCExpiryDate</OutputVariable>
            </Origin>
            <MethodBoundary line="95" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard(sourceAccount_CCNumber,sourceAccount_CCExpiryDate,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>sourceAccount_CCExpiryDate</InputVariable>
              <ActualInputVariable>sourceAccount_CCExpiryDate</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</Method>
            </MethodBoundary>
            <CallResult line="141" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>comment = "[CC Payment from " + sourceAccount_CCNumber +":" +sourceAccount_CCExpiryDate +"] " + comment;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>comment</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="143" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.MakePayment_Using_CreditCard</StatementMethod>
              <Statement>return TransferFunds(hardCodedInternalBankAccountNumber,destinationAccount,amount,comment);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
              <InputVariable>comment</InputVariable>
              <ActualInputVariable>comment</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.TransferFunds</Method>
            </MethodBoundary>
            <CallResult line="99" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>string sourceAccountTransaction =	"Insert into fsb_transactions " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sourceAccountTransaction</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="113" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.TransferFunds</StatementMethod>
              <Statement>if (1 == SqlServerEngine.executeSQLCommand(sourceAccountTransaction))</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>sourceAccountTransaction</InputVariable>
              <ActualInputVariable>sourceAccountTransaction</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>27cc0566-233e-45bc-a787-f327c653a396</Identifier>
          <ResulstHash>cRyn47Bu5VlbAYeKCN4Fxx/0dkI=</ResulstHash>
          <Color>114</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword(System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String newPassword]</EntryPoint>
          <EntryVariable>newPassword</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:110 through the variable newPassword which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="110" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>newPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="111" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.ChangeUserPassword(userID,newPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>newPassword</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</Method>
            </MethodBoundary>
            <CallResult line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>823ff341-e54a-4dd4-8c15-2e79ecc869d2</Identifier>
          <ResulstHash>cRyn47Bu5VlbAYeKCN4Fxx/0dkI=</ResulstHash>
          <Color>113</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword(System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String newPassword]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:110 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="110" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>newPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="111" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.ChangeUserPassword(userID,newPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>newPassword</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</Method>
            </MethodBoundary>
            <CallResult line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>601928ab-dab9-427d-a6b8-a4ab4ce3b8c4</Identifier>
          <ResulstHash>cRyn47Bu5VlbAYeKCN4Fxx/0dkI=</ResulstHash>
          <Color>112</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword(System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID,System.String newPassword]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:110 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="110" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>newPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="111" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.ChangeUserPassword</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.ChangeUserPassword(userID,newPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>newPassword</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</Method>
            </MethodBoundary>
            <CallResult line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>newPassword</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="60" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ChangeUserPassword</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Update fsb_users Set password = '" + newPassword + "' where user_id = " + userID + "");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>773e242f-ec18-4785-8591-d992f52f7420</Identifier>
          <ResulstHash>yfYNUOEJgQtoy/RszGPem9gETFk=</ResulstHash>
          <Color>111</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.CreateUser(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>userPassword</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:98 through the variable userPassword which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="98" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="99" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateUser(userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>userPassword</InputVariable>
              <ActualInputVariable>userPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0c949057-4673-4908-89e0-bee3c686e49c</Identifier>
          <ResulstHash>yfYNUOEJgQtoy/RszGPem9gETFk=</ResulstHash>
          <Color>110</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.CreateUser(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>loginID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:98 through the variable loginID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="98" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="99" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateUser(userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>userPassword</InputVariable>
              <ActualInputVariable>userPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>6e42c339-e504-439a-9410-d57cf2884df0</Identifier>
          <ResulstHash>yfYNUOEJgQtoy/RszGPem9gETFk=</ResulstHash>
          <Color>109</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.CreateUser(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>userName</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:98 through the variable userName which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="98" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="99" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateUser(userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>userPassword</InputVariable>
              <ActualInputVariable>userPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>35cc34bb-0dce-4862-beb3-43289be17245</Identifier>
          <ResulstHash>yfYNUOEJgQtoy/RszGPem9gETFk=</ResulstHash>
          <Color>108</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.CreateUser(System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName,System.String loginID,System.String userPassword]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:98 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="98" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userPassword</OutputVariable>
            </Origin>
            <MethodBoundary line="99" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.CreateUser</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateUser(userName,loginID,userPassword);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>userPassword</InputVariable>
              <ActualInputVariable>userPassword</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateUser</Method>
            </MethodBoundary>
            <CallResult line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>stack2</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateUser</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand("Insert into fsb_users (user_name,login_id,password, creation_date) Values ('" + userName + "','" + loginID + "','" + userPassword + "','" + DateTime.Now + "')");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>087e5fb6-ff14-449d-af46-6cd8c4160eae</Identifier>
          <ResulstHash>IImAgN2gWIjokWep11lkosZfzE8=</ResulstHash>
          <Color>103</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String messageID]</EntryPoint>
          <EntryVariable>messageID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:63 through the variable messageID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="63" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>messageID</OutputVariable>
            </Origin>
            <MethodBoundary line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.DeleteMessage(messageID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>messageID</InputVariable>
              <ActualInputVariable>messageID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.DeleteMessage</Method>
            </MethodBoundary>
            <CallResult line="214" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteMessage</StatementMethod>
              <Statement>string sqlQuery = "Delete from fsb_messages where message_id =" + messageID;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>messageID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="215" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteMessage</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>aa105301-ae02-4b47-88fd-a9582aa22d2d</Identifier>
          <ResulstHash>IImAgN2gWIjokWep11lkosZfzE8=</ResulstHash>
          <Color>102</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UsersCommunity this,System.String sessionID,System.String messageID]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UsersCommunity.asmx.cs:63 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="63" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>messageID</OutputVariable>
            </Origin>
            <MethodBoundary line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UsersCommunity.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UsersCommunity.DeleteMessage</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.DeleteMessage(messageID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>messageID</InputVariable>
              <ActualInputVariable>messageID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.DeleteMessage</Method>
            </MethodBoundary>
            <CallResult line="214" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteMessage</StatementMethod>
              <Statement>string sqlQuery = "Delete from fsb_messages where message_id =" + messageID;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>messageID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="215" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteMessage</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>b86e1aef-7987-4ee4-8f16-587ee5a5835a</Identifier>
          <ResulstHash>M9n0rzrIuBh5/t3hRVq7r9CubGk=</ResulstHash>
          <Color>97</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.DeleteUser(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:116 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="116" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.DeleteUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="117" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.DeleteUser</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.DeleteUser(userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.DeleteUser</Method>
            </MethodBoundary>
            <CallResult line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteUser</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand("Delete from fsb_users where  user_ID ='" + userID + "'");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteUser</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand("Delete from fsb_users where  user_ID ='" + userID + "'");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>55382719-61ee-44bf-ba6a-05227a457dcc</Identifier>
          <ResulstHash>M9n0rzrIuBh5/t3hRVq7r9CubGk=</ResulstHash>
          <Color>96</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.DeleteUser(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:116 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="116" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.DeleteUser</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="117" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.DeleteUser</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.DeleteUser(userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.DeleteUser</Method>
            </MethodBoundary>
            <CallResult line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteUser</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand("Delete from fsb_users where  user_ID ='" + userID + "'");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.DeleteUser</StatementMethod>
              <Statement>return SqlServerEngine.executeSQLCommand("Delete from fsb_users where  user_ID ='" + userID + "'");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9411aa09-319a-4d47-a63f-ecba0c11d84f</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>93</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>accountType</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable accountType which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>fa495d69-5684-4565-a5be-515d09167577</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>92</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>accountInitalBalance</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable accountInitalBalance which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>60d69da8-b8ed-4690-ad9f-3b9ea47066c2</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>91</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>accountBranch</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable accountBranch which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>41026ed5-4e45-4f3b-90cc-d7c15e5fbb19</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>90</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>accountCurrency</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable accountCurrency which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ecba38fb-fc89-4d40-a693-7391170d255e</Identifier>
          <ResulstHash>cqfPc4MTDqhit1O1wE7GvZJCvP0=</ResulstHash>
          <Color>89</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.CreateAccount(System.String,System.String,System.String,System.String,System.String,System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountNumber,System.String userID,System.String accountCurrency,System.String accountBranch,System.String accountInitalBalance,System.String accountType]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:100 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:41.</ProblemDescription>
          <Transformations>
            <Origin line="100" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="101" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.CreateAccount</StatementMethod>
              <Statement>HacmeBank_v2_WS.DataFactory.CreateAccount(accountNumber,userID,accountCurrency,accountBranch,accountInitalBalance,accountType);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.CreateAccount</Method>
            </MethodBoundary>
            <CallResult line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="151" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.CreateAccount</StatementMethod>
              <Statement>SqlServerEngine.executeSQLCommand(	"Insert into fsb_accounts " +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</Method>
            </MethodBoundary>
            <MethodBoundary line="41" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>76ffcec1-47ec-4e9c-9435-0aba2ee3ef80</Identifier>
          <ResulstHash>Hv8ZNj5Fw9JiAY21Gi7nDHDetm4=</ResulstHash>
          <Color>107</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String transactionID]</EntryPoint>
          <EntryVariable>transactionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:70 through the variable transactionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="70" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>transactionID</OutputVariable>
            </Origin>
            <MethodBoundary line="71" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID(transactionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>transactionID</InputVariable>
              <ActualInputVariable>transactionID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</Method>
            </MethodBoundary>
            <CallResult line="93" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_transactions  where transaction_id = '" + transactionID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>transactionID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>4150609b-5173-43c1-8fad-28c42c28628a</Identifier>
          <ResulstHash>Hv8ZNj5Fw9JiAY21Gi7nDHDetm4=</ResulstHash>
          <Color>106</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String transactionID]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:70 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="70" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>transactionID</OutputVariable>
            </Origin>
            <MethodBoundary line="71" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID(transactionID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>transactionID</InputVariable>
              <ActualInputVariable>transactionID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</Method>
            </MethodBoundary>
            <CallResult line="93" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_transactions  where transaction_id = '" + transactionID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>transactionID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="94" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactionDetails_using_TransactionID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>337e535d-2cb5-4c64-a0b8-9a3b8a0beae7</Identifier>
          <ResulstHash>KnRSn0TyL00FtJ83rkxTXBwocbM=</ResulstHash>
          <Color>105</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountID]</EntryPoint>
          <EntryVariable>accountID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:64 through the variable accountID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountID</OutputVariable>
            </Origin>
            <MethodBoundary line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID(accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>accountID</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</Method>
            </MethodBoundary>
            <CallResult line="87" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>string sqlQuery = "select transaction_id from  fsb_transactions  where account_no = '" + accountID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="88" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</Method>
            </MethodBoundary>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>df20c8c3-a85f-47ec-b051-a235aa41fc0c</Identifier>
          <ResulstHash>KnRSn0TyL00FtJ83rkxTXBwocbM=</ResulstHash>
          <Color>104</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountID]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:64 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="64" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountID</OutputVariable>
            </Origin>
            <MethodBoundary line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID(accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>accountID</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</Method>
            </MethodBoundary>
            <CallResult line="87" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>string sqlQuery = "select transaction_id from  fsb_transactions  where account_no = '" + accountID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="88" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountTransactions_using_AccountID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</Method>
            </MethodBoundary>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>138ac8c3-2ade-4ebd-9273-b54ec5ee4754</Identifier>
          <ResulstHash>F07l7GyWSh4rAZvFTHC43vFzbLs=</ResulstHash>
          <Color>101</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String userID]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:52 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID(userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</Method>
            </MethodBoundary>
            <CallResult line="76" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</StatementMethod>
              <Statement>string sqlQuery = "select account_no from  fsb_accounts where user_ID = " + userID;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</Method>
            </MethodBoundary>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>21bb5407-51c1-416b-91e6-3566b46f6b65</Identifier>
          <ResulstHash>F07l7GyWSh4rAZvFTHC43vFzbLs=</ResulstHash>
          <Color>100</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String userID]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:52 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetUserAccounts_using_UserID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID(userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</Method>
            </MethodBoundary>
            <CallResult line="76" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</StatementMethod>
              <Statement>string sqlQuery = "select account_no from  fsb_accounts where user_ID = " + userID;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserAccounts_using_userID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</Method>
            </MethodBoundary>
            <MethodBoundary line="77" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstFieldFromAllRows</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cf1d6f41-75bb-4389-a807-7a0779952795</Identifier>
          <ResulstHash>vqyhUqB217W6/VxulQQkM4V0wOA=</ResulstHash>
          <Color>99</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String loginID]</EntryPoint>
          <EntryVariable>loginID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:92 through the variable loginID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="92" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>loginID</OutputVariable>
            </Origin>
            <MethodBoundary line="93" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("login_id",loginID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>loginID</InputVariable>
              <ActualInputVariable>loginID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>af3ef092-42c2-4872-a013-1e3e14d2e0ad</Identifier>
          <ResulstHash>vqyhUqB217W6/VxulQQkM4V0wOA=</ResulstHash>
          <Color>98</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String loginID]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:92 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="92" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>loginID</OutputVariable>
            </Origin>
            <MethodBoundary line="93" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_loginID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("login_id",loginID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>loginID</InputVariable>
              <ActualInputVariable>loginID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>7fc74eda-31c3-4a00-8816-2c578aa6e9f8</Identifier>
          <ResulstHash>/By7rUB+IVzgjSMHdCJySyEODmI=</ResulstHash>
          <Color>95</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountID]</EntryPoint>
          <EntryVariable>accountID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:58 through the variable accountID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountID</OutputVariable>
            </Origin>
            <MethodBoundary line="59" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID(accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>accountID</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</Method>
            </MethodBoundary>
            <CallResult line="81" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_accounts  where account_no = '" + accountID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="82" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9632f9de-0898-4a0b-ad54-fbe9929a88e5</Identifier>
          <ResulstHash>/By7rUB+IVzgjSMHdCJySyEODmI=</ResulstHash>
          <Color>94</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String accountID]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:58 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="58" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>accountID</OutputVariable>
            </Origin>
            <MethodBoundary line="59" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID(accountID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>accountID</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</Method>
            </MethodBoundary>
            <CallResult line="81" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_accounts  where account_no = '" + accountID + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>accountID</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="82" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetAccountDetails_using_AccountID</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3899e66f-0244-469d-a137-07ab82b95bd3</Identifier>
          <ResulstHash>mZPYp35MFyODqfPrCRZbXv7xeJA=</ResulstHash>
          <Color>128</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName]</EntryPoint>
          <EntryVariable>userName</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:80 through the variable userName which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="81" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("user_name",userName);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>a1de9d9a-5ea3-43b5-bf54-10dced5801a9</Identifier>
          <ResulstHash>mZPYp35MFyODqfPrCRZbXv7xeJA=</ResulstHash>
          <Color>127</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userName]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:80 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="80" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userName</OutputVariable>
            </Origin>
            <MethodBoundary line="81" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userName</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("user_name",userName);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>524e7cca-a8fc-4fb6-8d0b-3868b5cc2607</Identifier>
          <ResulstHash>P3lNN0aTR9WOo20tZUnP3CTcbN8=</ResulstHash>
          <Color>126</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID]</EntryPoint>
          <EntryVariable>userID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:86 through the variable userID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="86" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="87" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("user_id",userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>4965c8d8-cde4-4835-8544-18d5f3b38da2</Identifier>
          <ResulstHash>P3lNN0aTR9WOo20tZUnP3CTcbN8=</ResulstHash>
          <Color>125</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String sessionID,System.String userID]</EntryPoint>
          <EntryVariable>sessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:86 through the variable sessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="86" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>userID</OutputVariable>
            </Origin>
            <MethodBoundary line="87" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.GetUserDetail("user_id",userID);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userID</InputVariable>
              <ActualInputVariable>userID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.GetUserDetail</Method>
            </MethodBoundary>
            <CallResult line="30" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>string sqlQuery = "select * from  fsb_users where " + fieldToUse + " = '" + valueToSearch + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="31" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.GetUserDetail</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="62" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_FirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d933afd3-b98d-4753-984c-06f38e0213ba</Identifier>
          <ResulstHash>kyozsA3Jmn6vRH+ToqT268Sep8Y=</ResulstHash>
          <Color>124</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.Login(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String loginID,System.String password]</EntryPoint>
          <EntryVariable>password</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:50 through the variable password which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="50" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.Login</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>loginID</OutputVariable>
            </Origin>
            <MethodBoundary line="55" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.Login</StatementMethod>
              <Statement>string userID = HacmeBank_v2_WS.DataFactory.ValidateUserPassword(loginID,password).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>loginID</InputVariable>
              <ActualInputVariable>loginID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</Method>
            </MethodBoundary>
            <CallResult line="47" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</StatementMethod>
              <Statement>string sqlQuery = "select user_id from  fsb_users where login_id = '" + loginID+ "' and password = '" + password + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="48" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</StatementMethod>
              <Statement>object queryResult = SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="139" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d04be872-2d32-443b-906c-7e668d9ca9f9</Identifier>
          <ResulstHash>kyozsA3Jmn6vRH+ToqT268Sep8Y=</ResulstHash>
          <Color>123</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_UserManagement.Login(System.String,System.String)); params = [HacmeBank_v2_WS.WS_UserManagement this,System.String loginID,System.String password]</EntryPoint>
          <EntryVariable>loginID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		UserManagement.asmx.cs:50 through the variable loginID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="50" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.Login</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>loginID</OutputVariable>
            </Origin>
            <MethodBoundary line="55" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\UserManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_UserManagement.Login</StatementMethod>
              <Statement>string userID = HacmeBank_v2_WS.DataFactory.ValidateUserPassword(loginID,password).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>loginID</InputVariable>
              <ActualInputVariable>loginID</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</Method>
            </MethodBoundary>
            <CallResult line="47" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</StatementMethod>
              <Statement>string sqlQuery = "select user_id from  fsb_users where login_id = '" + loginID+ "' and password = '" + password + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sqlQuery</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="48" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.ValidateUserPassword</StatementMethod>
              <Statement>object queryResult = SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQuery</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow</Method>
            </MethodBoundary>
            <MethodBoundary line="139" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnObjectFromSQLQuery_containing_FirstFieldFromFirstRow</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>1cd9dd2c-42b0-4b7d-bba6-ffd0fe5bb139</Identifier>
          <ResulstHash>9Kpbo8ZT8AFT4Jg8l2FtnqSdcuM=</ResulstHash>
          <Color>122</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sqlQueryToExecute]</EntryPoint>
          <EntryVariable>sqlQueryToExecute</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:112 through the variable sqlQueryToExecute which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="112" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sqlQueryToExecute</OutputVariable>
            </Origin>
            <MethodBoundary line="113" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.executeSqlQuery(sqlQueryToExecute);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQueryToExecute</InputVariable>
              <ActualInputVariable>sqlQueryToExecute</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.executeSqlQuery</Method>
            </MethodBoundary>
            <MethodBoundary line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.executeSqlQuery</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema(sqlQueryToExecute);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQueryToExecute</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema</Method>
            </MethodBoundary>
            <MethodBoundary line="111" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2dbea438-ffc8-4c76-ae24-0b4deb90dbe6</Identifier>
          <ResulstHash>9Kpbo8ZT8AFT4Jg8l2FtnqSdcuM=</ResulstHash>
          <Color>121</Color>
          <Vector>WebServiceMethod</Vector>
          <EntryPoint>MethodHeader (HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery(System.String,System.String)); params = [HacmeBank_v2_WS.WS_AccountManagement this,System.String SessionID,System.String sqlQueryToExecute]</EntryPoint>
          <EntryVariable>SessionID</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use parameterized SQL instead of dynamic SQL.</Resolution>
          <ProblemDescription>A SQL injection vulnerability was found through
		a user controlled variable that enters the application at
		AccountManagement.asmx.cs:112 through the variable SessionID which
		eventually leads to a SQL injection issue at
		SqlServerEngine.cs:53.</ProblemDescription>
          <Transformations>
            <Origin line="112" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery</StatementMethod>
              <Statement>{</Statement>
              <StatementType>Nop</StatementType>
              <OutputVariable>sqlQueryToExecute</OutputVariable>
            </Origin>
            <MethodBoundary line="113" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\WebServices\AccountManagement.asmx.cs">
              <StatementMethod>HacmeBank_v2_WS.WS_AccountManagement.ExecuteSqlQuery</StatementMethod>
              <Statement>return HacmeBank_v2_WS.DataFactory.executeSqlQuery(sqlQueryToExecute);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>sqlQueryToExecute</InputVariable>
              <ActualInputVariable>sqlQueryToExecute</ActualInputVariable>
              <Method>HacmeBank_v2_WS.DataFactory.executeSqlQuery</Method>
            </MethodBoundary>
            <MethodBoundary line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\DataFactory.cs">
              <StatementMethod>HacmeBank_v2_WS.DataFactory.executeSqlQuery</StatementMethod>
              <Statement>return SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema(sqlQueryToExecute);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQueryToExecute</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema</Method>
            </MethodBoundary>
            <MethodBoundary line="111" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.returnArrayListFromSQLQuery_containing_AllFieldsFromAllRows_andResultingSchema</StatementMethod>
              <Statement>SqlDataReader reader1 = executeSQLCommand_returnSqldataReader(sqlQuery);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>sqlQuery</ActualInputVariable>
              <Method>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</Method>
            </MethodBoundary>
            <MethodBoundary line="53" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_WS\App_Code\classes\SqlServerEngine.cs">
              <StatementMethod>HacmeBank_v2_WS.SqlServerEngine.executeSQLCommand_returnSqldataReader</StatementMethod>
              <Statement>SqlCommand command1 = new SqlCommand(text1, Global.globalSqlServerConnection);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>text1</ActualInputVariable>
              <Method>System.Data.SqlClient.SqlCommand..ctor</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
    <Rule>
      <Name>Redirection to User Controlled Site</Name>
      <Identifier>ACESEC06</Identifier>
      <TotalResults>0</TotalResults>
      <Results />
    </Rule>
    <Rule>
      <Name>Cross-Site Scripting</Name>
      <Identifier>ACESEC05</Identifier>
      <TotalResults>18</TotalResults>
      <Results>
        <Result>
          <Identifier>9980472d-fd3e-4b52-8e1a-bd60f0a8305b</Identifier>
          <ResulstHash>D+IL+dxgRFwfhQ2flfN5BmuVwps=</ResulstHash>
          <Color>216</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Form()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason>User input was used as a collection key</ConfidenceReason>
          <ConfidenceLevel>Low</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		RequestToValidate.cs:65 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="65" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="65" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$6$0003</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Form</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_AllKeys</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <Index line="65" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>sFormKey</OutputVariable>
              <InputVariable>CS$6$0003</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_AllKeys</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <CallResult line="75" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dataToAnalyse</OutputVariable>
              <InputVariable>sFormKey</InputVariable>
              <ActualInputVariable>fieldToAnalyse</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="77" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>FormsProcessed</OutputVariable>
              <InputVariable>dataToAnalyse</InputVariable>
              <ActualInputVariable>dataToAnalyse</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FormsProcessed</InputVariable>
              <ActualInputVariable>FormsProcessed</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <PropertyIndirection line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>45bc4dc1-df91-4041-a97c-da9df2eb982c</Identifier>
          <ResulstHash>8MWp70ZS5AWS8W4P98fumCPgU5k=</ResulstHash>
          <Color>217</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Form()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		RequestToValidate.cs:75 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="75" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="75" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dataToAnalyse</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Form</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="77" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>FormsProcessed</OutputVariable>
              <InputVariable>dataToAnalyse</InputVariable>
              <ActualInputVariable>dataToAnalyse</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FormsProcessed</InputVariable>
              <ActualInputVariable>FormsProcessed</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>92d7b936-38ad-4155-8a19-90f2e9de6956</Identifier>
          <ResulstHash>f0mhaHhQJAC+/9Z2nmL7QT7AtTQ=</ResulstHash>
          <Color>217</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := stack0.{System.Web.HttpRequest}get_Form()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		RequestToValidate.cs:75 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="75" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="75" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>dataToAnalyse</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_Form</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="77" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>FormsProcessed</OutputVariable>
              <InputVariable>dataToAnalyse</InputVariable>
              <ActualInputVariable>dataToAnalyse</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>FormsProcessed</InputVariable>
              <ActualInputVariable>FormsProcessed</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <MethodBoundary line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Collections.ArrayList.Add</Method>
            </MethodBoundary>
            <Taints line="170" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ArrayList.Add</ActualInputVariable>
            </Taints>
            <ReturnData line="183" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\1_RuleEngine\RequestToValidate.cs">
              <StatementMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>listOfRulesProcessed</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>listOfRulesProcessed</ActualInputVariable>
              <FromMethod>Foundstone.RequestToValidate.validateAndHandleMaliciousInput</FromMethod>
              <ToMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</ToMethod>
            </ReturnData>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>CS$5$0002</OutputVariable>
              <InputVariable>listOfRulesProcessed</InputVariable>
              <ActualInputVariable>Return from RequestToValidate.validateAndHandleMaliciousInput</ActualInputVariable>
              <Method>System.Collections.ArrayList.GetEnumerator</Method>
              <Argument>listOfRulesProcessed</Argument>
            </CallResult>
            <CallResult line="117" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>CS$5$0002</InputVariable>
              <ActualInputVariable>Return from ArrayList.GetEnumerator</ActualInputVariable>
              <Method>System.Collections.IEnumerator.get_Current</Method>
              <Argument>CS$5$0002</Argument>
            </CallResult>
            <MethodBoundary line="119" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>item</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <PropertyIndirection line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2128880e-3138-48ae-993f-44e4d5cb896f</Identifier>
          <ResulstHash>jlseosA8/UOKt06h2lOtNBAXNks=</ResulstHash>
          <Color>196</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack0 := currentHttpRequest.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack0</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ProcessRequest.cs:83 through the variable stack0 which
		eventually leads to a cross-site scripting issue at
		LogRequestData.cs:30.</ProblemDescription>
          <Transformations>
            <Origin line="83" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
            </Origin>
            <CallResult line="83" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="83" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>Foundstone.ProcessRequest.resolvePageClassName</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <PropertyIndirection line="83" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.RequestToValidate.pageClassName</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from ProcessRequest.resolvePageClassName</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="84" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>Foundstone.RequestToValidate.pageClassName</InputVariable>
              <ActualInputVariable>Foundstone.RequestToValidate.pageClassName</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="84" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\2_ProcessRequest\ProcessRequest.cs">
              <StatementMethod>Foundstone.ProcessRequest.ProcessRequest_Handler</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>Foundstone.LogRequestData.addEntry</Method>
            </MethodBoundary>
            <CallResult line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>entryToAdd</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <PropertyIndirection line="22" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.addEntry</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <PropertyIndirection line="27" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>Foundstone.LogRequestData.messageToDisplay</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
            </PropertyIndirection>
            <MethodBoundary line="30" file="E:\BlogPosts\HacmeBank_V2\HacmeBank_v2.0\Validator.Net\FS_HttpModule\Logging\LogRequestData.cs">
              <StatementMethod>Foundstone.LogRequestData.outputMessage</StatementMethod>
              <Statement />
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>Foundstone.LogRequestData.messageToDisplay</InputVariable>
              <ActualInputVariable>Foundstone.LogRequestData.messageToDisplay</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>3e20c6ff-dc57-43a8-9896-1fc5084bcee8</Identifier>
          <ResulstHash>XcOq0NQGmT2BHHr7pm4ExIf+hfA=</ResulstHash>
          <Color>205</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ThreatIssue.aspx.cs:29 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		ThreatIssue.aspx.cs:29.</ProblemDescription>
          <Transformations>
            <Origin line="29" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("Handle " + Request.QueryString["deleteHandle"] +" was closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="29" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("Handle " + Request.QueryString["deleteHandle"] +" was closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="29" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("Handle " + Request.QueryString["deleteHandle"] +" was closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="29" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("Handle " + Request.QueryString["deleteHandle"] +" was closed&lt;br&gt;");</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>fb36ec73-498d-4adb-a0fd-04ac520a2694</Identifier>
          <ResulstHash>XcOq0NQGmT2BHHr7pm4ExIf+hfA=</ResulstHash>
          <Color>206</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.HttpRequest}get_QueryString()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		ThreatIssue.aspx.cs:33 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		ThreatIssue.aspx.cs:33.</ProblemDescription>
          <Transformations>
            <Origin line="33" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("ERROR: Handle " + Request.QueryString["deleteHandle"] +" could not be closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="33" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("ERROR: Handle " + Request.QueryString["deleteHandle"] +" could not be closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from HttpRequest.get_QueryString</ActualInputVariable>
              <Method>System.Collections.Specialized.NameValueCollection.get_Item</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="33" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("ERROR: Handle " + Request.QueryString["deleteHandle"] +" could not be closed&lt;br&gt;");</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from NameValueCollection.get_Item</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="33" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\_misc\ThreatIssue.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.aspx.ThreatIssue.Page_Load</StatementMethod>
              <Statement>Response.Write("ERROR: Handle " + Request.QueryString["deleteHandle"] +" could not be closed&lt;br&gt;");</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.HttpResponse.Write</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>538d448b-fde9-488e-87ca-96330f7b64c5</Identifier>
          <ResulstHash>Qn5EvjNlTwOnZvklMp74J9IgzU0=</ResulstHash>
          <Color>252</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack3 := stack3.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack3</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Manage_Accounts.ascx.cs:65 through the variable stack3 which
		eventually leads to a cross-site scripting issue at
		Manage_Accounts.ascx.cs:65.</ProblemDescription>
          <Transformations>
            <Origin line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Accounts.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Manage_Accounts.btnCreateNewAccount_Click</StatementMethod>
              <Statement>lblErrorMessage.Text = "Account #" + txtAccountNumber.Text + " created for user '" + ddlUserIDs.SelectedItem + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
            </Origin>
            <CallResult line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Accounts.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Manage_Accounts.btnCreateNewAccount_Click</StatementMethod>
              <Statement>lblErrorMessage.Text = "Account #" + txtAccountNumber.Text + " created for user '" + ddlUserIDs.SelectedItem + "'";</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="65" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Manage_Accounts.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Manage_Accounts.btnCreateNewAccount_Click</StatementMethod>
              <Statement>lblErrorMessage.Text = "Account #" + txtAccountNumber.Text + " created for user '" + ddlUserIDs.SelectedItem + "'";</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>d7308c21-459c-4bce-8ee2-959bf686dd4d</Identifier>
          <ResulstHash>aip7lFcl9gylshM68gaXY9hacTM=</ResulstHash>
          <Color>254</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Fetch_Web_Page.ascx.cs:43 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		Fetch_Web_Page.ascx.cs:43.</ProblemDescription>
          <Transformations>
            <Origin line="43" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Fetch_Web_Page.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Fetch_Web_Page.btFetchWebPage_Click</StatementMethod>
              <Statement>lbWebPageContents.Text = AdminFunctions.fetchWebPage(txtWebPageUrlToFetch.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="43" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Fetch_Web_Page.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Fetch_Web_Page.btFetchWebPage_Click</StatementMethod>
              <Statement>lbWebPageContents.Text = AdminFunctions.fetchWebPage(txtWebPageUrlToFetch.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>HacmeBank_v2_Website.AdminFunctions.fetchWebPage</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="43" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\admin\Fetch_Web_Page.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.admin.Fetch_Web_Page.btFetchWebPage_Click</StatementMethod>
              <Statement>lbWebPageContents.Text = AdminFunctions.fetchWebPage(txtWebPageUrlToFetch.Text);</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from AdminFunctions.fetchWebPage</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>cb5cd9ee-7945-41a6-a0ca-352a82f91869</Identifier>
          <ResulstHash>kq0SGipMN/dJGnnPtMO+samRee4=</ResulstHash>
          <Color>264</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		AdminSection.ascx.cs:67 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		AdminSection.ascx.cs:67.</ProblemDescription>
          <Transformations>
            <Origin line="67" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AdminSection.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminSection.allocatedRamdomNumberToTextBox</StatementMethod>
              <Statement>lblResponseValue.Text = (Int64.Parse(txtChallenge.Text) ^ Int64.Parse(ConfigurationSettings.AppSettings.Get("AdminSectionKey"))).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="67" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AdminSection.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminSection.allocatedRamdomNumberToTextBox</StatementMethod>
              <Statement>lblResponseValue.Text = (Int64.Parse(txtChallenge.Text) ^ Int64.Parse(ConfigurationSettings.AppSettings.Get("AdminSectionKey"))).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>System.Int64.Parse</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <CallResult line="67" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AdminSection.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminSection.allocatedRamdomNumberToTextBox</StatementMethod>
              <Statement>lblResponseValue.Text = (Int64.Parse(txtChallenge.Text) ^ Int64.Parse(ConfigurationSettings.AppSettings.Get("AdminSectionKey"))).ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>stack1</ActualInputVariable>
              <Method>System.Int64.ToString</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="67" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\AdminSection.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.AdminSection.allocatedRamdomNumberToTextBox</StatementMethod>
              <Statement>lblResponseValue.Text = (Int64.Parse(txtChallenge.Text) ^ Int64.Parse(ConfigurationSettings.AppSettings.Get("AdminSectionKey"))).ToString();</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from Int64.ToString</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>0b62dd7f-70e6-4a88-a277-0e1d4fab1fda</Identifier>
          <ResulstHash>DO7GhZYdm/FVl0ArCkR+oh2UY/4=</ResulstHash>
          <Color>245</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.ListControl}get_SelectedValue()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Loan.ascx.cs:85 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		Loan.ascx.cs:85.</ProblemDescription>
          <Transformations>
            <Origin line="85" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\Loan.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Loan.drpdwnLoanPeriodAndInterestRate_SelectedIndexChanged</StatementMethod>
              <Statement>lblRate_Of_Interest.Text = drpdwnLoanPeriodAndInterestRate.SelectedValue;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <MethodBoundary line="85" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\Loan.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.Loan.drpdwnLoanPeriodAndInterestRate_SelectedIndexChanged</StatementMethod>
              <Statement>lblRate_Of_Interest.Text = drpdwnLoanPeriodAndInterestRate.SelectedValue;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from ListControl.get_SelectedValue</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>2772997d-f5ce-4483-971a-5ece18e0bf29</Identifier>
          <ResulstHash>dyrw21ddYmaUbtTAbkSyhTBNVIQ=</ResulstHash>
          <Color>170</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:1611 through the variable results which
		eventually leads to a cross-site scripting issue at
		PostMessageForm.ascx.cs:46.</ProblemDescription>
          <Transformations>
            <Origin line="1611" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>object[] results = this.Invoke("GetPostedMessages", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="1613" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>return ((object[])(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="1614" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>allPostedMessages</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UsersCommunity.GetPostedMessages</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</ToMethod>
            </ReturnData>
            <Index line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>foreach (dataClasses.postedMessage objPostedMessage in postedMessages)</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>objPostedMessage</OutputVariable>
              <InputVariable>allPostedMessages</InputVariable>
              <ActualInputVariable>postedMessages</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <CallResult line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack3</OutputVariable>
              <InputVariable>objPostedMessage</InputVariable>
              <ActualInputVariable>objPostedMessage</ActualInputVariable>
              <Method>System.DateTime.ToShortDateString</Method>
              <Argument>stack3</Argument>
            </CallResult>
            <CallResult line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack3</InputVariable>
              <ActualInputVariable>stack3</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>e35a6915-76fb-4583-b94b-71b622ad1203</Identifier>
          <ResulstHash>G4Nb2WHle4XGK1ivMHZpkhoMSVg=</ResulstHash>
          <Color>170</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:1611 through the variable results which
		eventually leads to a cross-site scripting issue at
		PostMessageForm.ascx.cs:46.</ProblemDescription>
          <Transformations>
            <Origin line="1611" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>object[] results = this.Invoke("GetPostedMessages", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="1613" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>return ((object[])(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="1614" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>allPostedMessages</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UsersCommunity.GetPostedMessages</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</ToMethod>
            </ReturnData>
            <Index line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>postedMessages[i].messageSubject = (string)postedMessage[3];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>allPostedMessages</InputVariable>
              <ActualInputVariable>postedMessages</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <PropertyIndirection line="37" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>postedMessages[i].messageSubject = (string)postedMessage[3];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageSubject</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageSubject</InputVariable>
              <ActualInputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageSubject</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>463d5758-7468-4b51-bdff-1ed0b040010e</Identifier>
          <ResulstHash>yPRUwoLiGKc9oI3cDAinwpcsa1U=</ResulstHash>
          <Color>170</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:1611 through the variable results which
		eventually leads to a cross-site scripting issue at
		PostMessageForm.ascx.cs:46.</ProblemDescription>
          <Transformations>
            <Origin line="1611" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>object[] results = this.Invoke("GetPostedMessages", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="1613" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>return ((object[])(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="1614" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>allPostedMessages</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UsersCommunity.GetPostedMessages</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</ToMethod>
            </ReturnData>
            <Index line="42" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>foreach (dataClasses.postedMessage objPostedMessage in postedMessages)</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>objPostedMessage</OutputVariable>
              <InputVariable>allPostedMessages</InputVariable>
              <ActualInputVariable>postedMessages</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <CallResult line="44" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>object[] userDetails = Global.objUserManagement.GetUserDetail_using_userID("",objPostedMessage.userID.ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
              <InputVariable>objPostedMessage</InputVariable>
              <ActualInputVariable>objPostedMessage</ActualInputVariable>
              <Method>System.Decimal.ToString</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <CallResult line="44" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>object[] userDetails = Global.objUserManagement.GetUserDetail_using_userID("",objPostedMessage.userID.ToString());</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userDetails</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from Decimal.ToString</ActualInputVariable>
              <Method>localhost.WS_UserManagement.GetUserDetail_using_userID</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <Index line="45" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>string userName = userDetails[1].ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userDetails</InputVariable>
              <ActualInputVariable>userDetails</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <CallResult line="45" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>string userName = userDetails[1].ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userName</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userDetails</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>ca7f0e28-f23c-471d-8bee-bce881f61751</Identifier>
          <ResulstHash>2yMGVobO0y+ibp82IbPKvR6PVqo=</ResulstHash>
          <Color>163</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:1080 through the variable results which
		eventually leads to a cross-site scripting issue at
		PostMessageForm.ascx.cs:46.</ProblemDescription>
          <Transformations>
            <Origin line="1080" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>object[] results = this.Invoke("GetUserDetail_using_userID", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="1083" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>return ((object[])(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="1084" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.GetUserDetail_using_userID</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userDetails</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UserManagement.GetUserDetail_using_userID</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</ToMethod>
            </ReturnData>
            <Index line="45" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>string userName = userDetails[1].ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>userDetails</InputVariable>
              <ActualInputVariable>userDetails</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <CallResult line="45" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>string userName = userDetails[1].ToString();</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>userName</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>userDetails</ActualInputVariable>
              <Method>System.Object.ToString</Method>
              <Argument>stack0</Argument>
            </CallResult>
            <CallResult line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>userName</InputVariable>
              <ActualInputVariable>userName</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="46" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text +=	"&lt;tr&gt;&lt;td width=200 valign=top  bgcolor='#F5EFFF'&gt;" +</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>9eb94761-08af-4be7-8dfa-d94ef49bbad5</Identifier>
          <ResulstHash>D0ljuf7Ygt6jGHz3dyFmWtPjb4I=</ResulstHash>
          <Color>170</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:1611 through the variable results which
		eventually leads to a cross-site scripting issue at
		PostMessageForm.ascx.cs:52.</ProblemDescription>
          <Transformations>
            <Origin line="1611" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>object[] results = this.Invoke("GetPostedMessages", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="1613" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>return ((object[])(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="1614" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UsersCommunity.GetPostedMessages</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>allPostedMessages</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UsersCommunity.GetPostedMessages</FromMethod>
              <ToMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</ToMethod>
            </ReturnData>
            <Index line="38" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>postedMessages[i].messageText = (string)postedMessage[4];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>allPostedMessages</InputVariable>
              <ActualInputVariable>postedMessages</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <PropertyIndirection line="38" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>postedMessages[i].messageText = (string)postedMessage[4];</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageText</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
            </PropertyIndirection>
            <CallResult line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text += objPostedMessage.messageText;</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageText</InputVariable>
              <ActualInputVariable>HacmeBank_v2_Website.dataClasses+postedMessage.messageText</ActualInputVariable>
              <Method>System.String.Concat</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="52" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\ascx\PostMessageForm.ascx.cs">
              <StatementMethod>HacmeBank_v2_Website.ascx.PostMessageForm.LoadPostedMessages</StatementMethod>
              <Statement>lblPostedMessages.Text += objPostedMessage.messageText;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from String.Concat</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>abb173c8-54ec-4c5e-9a5f-5224fed56d52</Identifier>
          <ResulstHash>qN0qLipwmuEiE5wHIV2BD/Rbv4o=</ResulstHash>
          <Color>160</Color>
          <Vector>WebServiceReturnValue</Vector>
          <EntryPoint>results := stack0.{System.Web.Services.Protocols.SoapHttpClientProtocol}Invoke(stack1, stack2)</EntryPoint>
          <EntryVariable>results</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		App_WebReferences.0.cs:951 through the variable results which
		eventually leads to a cross-site scripting issue at
		Login.aspx.cs:197.</ProblemDescription>
          <Transformations>
            <Origin line="951" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.Login</StatementMethod>
              <Statement>object[] results = this.Invoke("Login", new object[] {</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>results</OutputVariable>
            </Origin>
            <Index line="954" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.Login</StatementMethod>
              <Statement>return ((string)(results[0]));</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack0</OutputVariable>
              <InputVariable>results</InputVariable>
              <ActualInputVariable>results</ActualInputVariable>
              <IndexVariable>stack1</IndexVariable>
            </Index>
            <ReturnData line="955" file="c:\Users\o2\AppData\Local\Temp\Temporary ASP.NET Files\catnettemp\71ac65da\23d6d264\App_WebReferences.0.cs">
              <StatementMethod>localhost.WS_UserManagement.Login</StatementMethod>
              <Statement>}</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>loginResult</OutputVariable>
              <InputVariable>stack0</InputVariable>
              <ActualInputVariable>stack0</ActualInputVariable>
              <FromMethod>localhost.WS_UserManagement.Login</FromMethod>
              <ToMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</ToMethod>
            </ReturnData>
            <MethodBoundary line="197" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>lblResult.Text= loginResult;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>loginResult</InputVariable>
              <ActualInputVariable>loginResult</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>50aea64c-7d32-4473-98e4-8fe0fa8e5318</Identifier>
          <ResulstHash>xtuKl98JUQrGI9ewVszR26nyuBA=</ResulstHash>
          <Color>278</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack1 := stack1.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack1</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:190 through the variable stack1 which
		eventually leads to a cross-site scripting issue at
		Login.aspx.cs:197.</ProblemDescription>
          <Transformations>
            <Origin line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>string loginResult = Global.objUserManagement.Login(txtUserName.Text,txtPassword.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
            </Origin>
            <CallResult line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>string loginResult = Global.objUserManagement.Login(txtUserName.Text,txtPassword.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>loginResult</OutputVariable>
              <InputVariable>stack1</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>localhost.WS_UserManagement.Login</Method>
              <Argument>stack1</Argument>
            </CallResult>
            <MethodBoundary line="197" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>lblResult.Text= loginResult;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>loginResult</InputVariable>
              <ActualInputVariable>loginResult</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
        <Result>
          <Identifier>25889483-140b-47cd-ad35-22b0220122b3</Identifier>
          <ResulstHash>s+xEHnBQwCThIubr/kOSYpNaNxw=</ResulstHash>
          <Color>279</Color>
          <Vector>WebRequest</Vector>
          <EntryPoint>stack2 := stack2.{System.Web.UI.WebControls.TextBox}get_Text()</EntryPoint>
          <EntryVariable>stack2</EntryVariable>
          <ConfidenceReason />
          <ConfidenceLevel>High</ConfidenceLevel>
          <Suppressed>false</Suppressed>
          <SuppressionType>None</SuppressionType>
          <Resolution>Use the Anti-XSS library to properly encode the data before rendering it</Resolution>
          <ProblemDescription>A cross-site scripting vulnerability was found through
		a user controlled variable that enters the application at
		Login.aspx.cs:190 through the variable stack2 which
		eventually leads to a cross-site scripting issue at
		Login.aspx.cs:197.</ProblemDescription>
          <Transformations>
            <Origin line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>string loginResult = Global.objUserManagement.Login(txtUserName.Text,txtPassword.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>stack2</OutputVariable>
            </Origin>
            <CallResult line="190" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>string loginResult = Global.objUserManagement.Login(txtUserName.Text,txtPassword.Text);</Statement>
              <StatementType>AssignmentStatement</StatementType>
              <OutputVariable>loginResult</OutputVariable>
              <InputVariable>stack2</InputVariable>
              <ActualInputVariable>Return from TextBox.get_Text</ActualInputVariable>
              <Method>localhost.WS_UserManagement.Login</Method>
              <Argument>stack2</Argument>
            </CallResult>
            <MethodBoundary line="197" file="e:\_Tests\Demos_Files\HacmeBank_v2.0 (7 Dec 08)\HacmeBank_v2_Website\aspx\Login.aspx.cs">
              <StatementMethod>HacmeBank_v2_Website.Login.btnSubmit_Click</StatementMethod>
              <Statement>lblResult.Text= loginResult;</Statement>
              <StatementType>ExpressionStatement</StatementType>
              <OutputVariable>stack1</OutputVariable>
              <InputVariable>loginResult</InputVariable>
              <ActualInputVariable>loginResult</ActualInputVariable>
              <Method>System.Web.UI.WebControls.Label.set_Text</Method>
            </MethodBoundary>
          </Transformations>
        </Result>
      </Results>
    </Rule>
  </Rules>
</Report>